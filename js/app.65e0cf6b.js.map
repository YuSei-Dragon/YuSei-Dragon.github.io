{"version":3,"file":"js/app.65e0cf6b.js","mappings":"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","sources":["webpack://vue3test/./src/App.vue","webpack://vue3test/./src/components/MonsterTest.vue","webpack://vue3test/./src/components/MonsterTest.vue?f876","webpack://vue3test/./src/App.vue?c928","webpack://vue3test/./src/store/index.js","webpack://vue3test/./src/main.js","webpack://vue3test/webpack/bootstrap","webpack://vue3test/webpack/runtime/chunk loaded","webpack://vue3test/webpack/runtime/compat get default export","webpack://vue3test/webpack/runtime/define property getters","webpack://vue3test/webpack/runtime/global","webpack://vue3test/webpack/runtime/hasOwnProperty shorthand","webpack://vue3test/webpack/runtime/jsonp chunk loading","webpack://vue3test/webpack/startup"],"sourcesContent":["<template>\n  <div class=\"block\">\n    <!-- <HelloWorld/> -->\n    <!-- <PokeTest/> -->\n    <MonsterTest/>\n  </div>\n</template>\n\n<script>\n// import HelloWorld from './components/HelloWorld.vue'\n// import PokeTest from './components/PokeTest.vue'\nimport MonsterTest from \"./components/MonsterTest.vue\"\n\nexport default {\n  name: 'App',\n  components: {\n    // HelloWorld,\n    // PokeTest,\n    MonsterTest,\n  }\n}\n</script>\n\n<style>\n.block{\n  width: 100%;\n  height: 100%;\n}\n</style>\n","<script setup>\r\n//stronger monster need more pay\r\n//you can ure your monster power to take the pay\r\n//first trun every one can choice one monster stand to the ground\r\n//first trun can not fight\r\n//one turn only one monster you can summon\r\n//all your monster starts added should less or amount 12\r\n\r\n//the number of cards can use will base on the number of turn\r\n//one monster one fight\r\n//20 power\r\n//the number of cards can keep 8\r\n//first turn everyone get 6 cards, every turn get 2 caeds\r\n//easy to play is important\r\n//everyone can find their own way to win\r\n//more strong monster should take more dangerouse\r\n//attack with A ,defend with D\r\n//change mode to defend can miss this attack to your power\r\n//use poke to control the speed of the game\r\n\r\n\r\n//Spade: attack card\r\n//Heart: heal your power\r\n//Club:  Special effects i hope this type of cards can use to attack/heal/defend\r\n//diamonds: defend card\r\n\r\n//装备卡equip，主动卡active，反击卡counterattack\r\n//12start monster attack design 8 ,because 3*8 = 24 3truns to lose\r\n//we can use 'kill' whithout num limit,because it is so cool to otk after many turns to prepare\r\n//monster attack should spend one 'kill' ,but u can just u 'kill' to attack\r\nimport {\r\n  nextTick,\r\n  ref,\r\n  watch,\r\n} from 'vue'\r\nconst cardsList = ref([\r\n    //黑桃攻击卡 13   5装备 3挑衅 2神兵 3禁忌\r\n    {cardType:'spade',num:1,name:'双刀',type:'equip',desc:'装备的怪兽一回合能打两刀'},\r\n    {cardType:'spade',num:2,name:'神弓',type:'equip',desc:'装备的怪兽攻击时可以攻击力减半(向下取整)，直接攻击玩家'},\r\n    {cardType:'spade',num:3,name:'照妖镜',type:'equip',desc:'装备的怪兽攻击时可以查看对方一张卡，并让其同名卡本回合无法发动'},\r\n    {cardType:'spade',num:4,name:'战斧',type:'equip',desc:'装备的怪兽攻击时对方防具失效'},\r\n    {cardType:'spade',num:5,name:'战锤',type:'equip',desc:'装备的怪兽攻击对方造成伤害翻倍'},\r\n    {cardType:'spade',num:6,name:'挑衅',type:'active',desc:'强制选取一只我方怪兽和一只敌方怪兽进行战斗处理,此时将对比双方攻击力'},\r\n    {cardType:'spade',num:7,name:'挑衅',type:'active',desc:'强制选取一只我方怪兽和一只敌方怪兽进行战斗处理,此时将对比双方攻击力'},\r\n    {cardType:'spade',num:8,name:'挑衅',type:'active',desc:'强制选取一只我方怪兽和一只敌方怪兽进行战斗处理,此时将对比双方攻击力'},\r\n    {cardType:'spade',num:9,name:'神兵天降',type:'active',desc:'当我方怪兽数量少于对方时可以发动，不需要生命值献祭进行一只怪兽召唤并在回合结束破坏该怪兽'},\r\n    {cardType:'spade',num:10,name:'神兵天降',type:'active',desc:'当我方怪兽数量少于对方时可以发动，不需要生命值献祭进行一只怪兽召唤并在回合结束破坏该怪兽'},\r\n    {cardType:'spade',num:11,name:'禁忌仪式',type:'active',desc:'进行一次判定，然后翻开牌堆顶三张卡加入手卡，每出现一张不同花色失去一点生命值'},\r\n    {cardType:'spade',num:12,name:'禁忌仪式',type:'active',desc:'进行一次判定，然后翻开牌堆顶三张卡加入手卡，每出现一张不同花色失去一点生命值'},\r\n    {cardType:'spade',num:13,name:'禁忌仪式',type:'active',desc:'进行一次判定，然后翻开牌堆顶三张卡加入手卡，每出现一张不同花色失去一点生命值'},\r\n    \r\n    //红桃恢复卡 13   2生命汲取 3生生不息 2灵魂解放 2时间倒流 4鸿门宴\r\n    {cardType:'heart',num:1,name:'生命汲取',type:'counterattack',desc:'恢复对方场上一只怪兽的攻击力数值的生命值'},\r\n    {cardType:'heart',num:2,name:'生命汲取',type:'counterattack',desc:'恢复对方场上一只怪兽的攻击力数值的生命值'},\r\n    {cardType:'heart',num:3,name:'生生不息',type:'active',desc:'恢复我方手牌数量的生命值'},\r\n    {cardType:'heart',num:4,name:'生生不息',type:'active',desc:'恢复我方手牌数量的生命值'},\r\n    {cardType:'heart',num:5,name:'生生不息',type:'active',desc:'恢复我方手牌数量的生命值'},\r\n    {cardType:'heart',num:6,name:'灵魂解放',type:'active',desc:'解放一只我方怪兽，恢复其攻击力/防御力较高的一方，并抽一张卡'},\r\n    {cardType:'heart',num:7,name:'灵魂解放',type:'active',desc:'解放一只我方怪兽，恢复其攻击力/防御力较高的一方，并抽一张卡'},\r\n    {cardType:'heart',num:8,name:'时间倒流',type:'counterattack',desc:'恢复本回合收到的全部伤害，并不需要生命值献祭召唤一只星级不大于受到伤害数值的怪兽'},\r\n    {cardType:'heart',num:9,name:'时间倒流',type:'counterattack',desc:'恢复本回合收到的全部伤害，并不需要生命值献祭召唤一只星级不大于受到伤害数值的怪兽'},\r\n    {cardType:'heart',num:10,name:'鸿门宴',type:'active',desc:'双方恢复2点生命值，双方抽一张卡后,你选一张卡，对方随机出一张卡进行拼点，赢的人获得两张拼点卡'},\r\n    {cardType:'heart',num:11,name:'鸿门宴',type:'active',desc:'双方恢复2点生命值，双方抽一张卡后,你选一张卡，对方随机出一张卡进行拼点，赢的人获得两张拼点卡'},\r\n    {cardType:'heart',num:12,name:'鸿门宴',type:'active',desc:'双方恢复2点生命值，双方抽一张卡后,你选一张卡，对方随机出一张卡进行拼点，赢的人获得两张拼点卡'},\r\n    {cardType:'heart',num:13,name:'鸿门宴',type:'active',desc:'双方恢复2点生命值，双方抽一张卡后,你选一张卡，对方随机出一张卡进行拼点，赢的人获得两张拼点卡'},\r\n    \r\n    //梅花特殊卡13    4血腥 3移花 3梁上 3投石  \r\n    {cardType:'club',num:1,name:'血腥镇压',type:'counterattack',desc:'支付两点生命值，无效对方一张卡的发动，并抽一张卡'},\r\n    {cardType:'club',num:2,name:'血腥镇压',type:'counterattack',desc:'支付两点生命值，无效对方一张卡的发动，并抽一张卡'},\r\n    {cardType:'club',num:3,name:'血腥镇压',type:'counterattack',desc:'支付两点生命值，无效对方一张卡的发动，并抽一张卡'},\r\n    {cardType:'club',num:4,name:'血腥镇压',type:'counterattack',desc:'支付两点生命值，无效对方一张卡的发动，并抽一张卡'},\r\n    {cardType:'club',num:5,name:'移花接木',type:'active',desc:'双方场上都有怪兽才能发动，夺取对方场上怪兽一张装备卡，装备到自己怪兽身上'},\r\n    {cardType:'club',num:6,name:'移花接木',type:'active',desc:'双方场上都有怪兽才能发动，夺取对方场上怪兽一张装备卡，装备到自己怪兽身上'},\r\n    {cardType:'club',num:7,name:'移花接木',type:'active',desc:'双方场上都有怪兽才能发动，夺取对方场上怪兽一张装备卡，装备到自己怪兽身上'},\r\n    {cardType:'club',num:8,name:'梁上君子',type:'active',desc:'抽取对方一张手卡，并进行一次判定，红色双方抽一张卡，黑色你弃置一张卡'},\r\n    {cardType:'club',num:9,name:'梁上君子',type:'active',desc:'抽取对方一张手卡，并进行一次判定，红色双方抽一张卡，黑色你弃置一张卡'},\r\n    {cardType:'club',num:10,name:'梁上君子',type:'active',desc:'抽取对方一张手卡，并进行一次判定，红色双方抽一张卡，黑色你弃置一张卡'},\r\n    {cardType:'club',num:11,name:'投石问路',type:'active',desc:'弃置对方一张手卡，或者清除对方一张反击区域的卡，不能对装备卡使用'},\r\n    {cardType:'club',num:12,name:'投石问路',type:'active',desc:'弃置对方一张手卡，或者清除对方一张反击区域的卡，不能对装备卡使用'},\r\n    {cardType:'club',num:13,name:'投石问路',type:'active',desc:'弃置对方一张手卡，或者清除对方一张反击区域的卡，不能对装备卡使用'},\r\n    \r\n    //方块防御卡13    5装备 2砸脚 3背水 3金汤\r\n    {cardType:'diamond',num:1,name:'反甲',type:'equip',desc:'装备的怪兽在对方回合，对方怪兽攻击会受到双倍反伤，装备怪兽受到伤害不会结算到玩家上'},\r\n    {cardType:'diamond',num:2,name:'护心镜',type:'equip',desc:'装备的怪兽即将被破坏时，破坏此卡并免疫这次破坏'},\r\n    {cardType:'diamond',num:3,name:'八卦阵',type:'equip',desc:'装备的怪兽被攻击时，进行一次判定，如果为红则取消这次攻击'},\r\n    {cardType:'diamond',num:4,name:'火焰甲',type:'equip',desc:'被攻击造成的伤害由对方承受'},\r\n    {cardType:'diamond',num:5,name:'血铠',type:'equip',desc:'装备的怪兽被攻击时，我方恢复发起攻击怪兽的攻击力'},\r\n    {cardType:'diamond',num:6,name:'搬石砸脚',type:'counterattack',desc:'对方攻击时发动，变为对对方造成攻击怪兽的攻击力伤害'},\r\n    {cardType:'diamond',num:7,name:'搬石砸脚',type:'counterattack',desc:'对方攻击时发动，变为对对方造成攻击怪兽的攻击力伤害'},\r\n    {cardType:'diamond',num:8,name:'背水一战',type:'counterattack',desc:'我方怪兽被攻击时可以发动，该回合该怪兽使用攻击力进行防御结算并不会破坏'},\r\n    {cardType:'diamond',num:9,name:'背水一战',type:'counterattack',desc:'我方怪兽被攻击时可以发动，该回合该怪兽使用攻击力进行防御结算并不会破坏'},\r\n    {cardType:'diamond',num:10,name:'背水一战',type:'counterattack',desc:'我方怪兽被攻击时可以发动，该回合该怪兽使用攻击力进行防御结算并不会破坏'},\r\n    {cardType:'diamond',num:11,name:'固若金汤',type:'counterattack',desc:'我方怪兽被攻击时可以发动，对方抽一张卡并结束战斗阶段'},\r\n    {cardType:'diamond',num:12,name:'固若金汤',type:'counterattack',desc:'我方怪兽被攻击时可以发动，对方抽一张卡并结束战斗阶段'},\r\n    {cardType:'diamond',num:13,name:'固若金汤',type:'counterattack',desc:'我方怪兽被攻击时可以发动，对方抽一张卡并结束战斗阶段'},\r\n\r\n    //基础卡50 20急袭 20格挡 3决斗 \r\n    {cardType:\"basic\",num:1,name:\"急袭\",type:'active',desc:\"对敌方造成两点伤害\"},\r\n    {cardType:\"basic\",num:1,name:\"急袭\",type:'active',desc:\"对敌方造成两点伤害\"},\r\n    {cardType:\"basic\",num:1,name:\"急袭\",type:'active',desc:\"对敌方造成两点伤害\"},\r\n    {cardType:\"basic\",num:1,name:\"急袭\",type:'active',desc:\"对敌方造成两点伤害\"},\r\n    {cardType:\"basic\",num:1,name:\"急袭\",type:'active',desc:\"对敌方造成两点伤害\"},\r\n    {cardType:\"basic\",num:1,name:\"急袭\",type:'active',desc:\"对敌方造成两点伤害\"},\r\n    {cardType:\"basic\",num:1,name:\"急袭\",type:'active',desc:\"对敌方造成两点伤害\"},\r\n    {cardType:\"basic\",num:1,name:\"急袭\",type:'active',desc:\"对敌方造成两点伤害\"},\r\n    {cardType:\"basic\",num:1,name:\"急袭\",type:'active',desc:\"对敌方造成两点伤害\"},\r\n    {cardType:\"basic\",num:1,name:\"急袭\",type:'active',desc:\"对敌方造成两点伤害\"},\r\n    {cardType:\"basic\",num:1,name:\"急袭\",type:'active',desc:\"对敌方造成两点伤害\"},\r\n    {cardType:\"basic\",num:1,name:\"急袭\",type:'active',desc:\"对敌方造成两点伤害\"},\r\n    {cardType:\"basic\",num:1,name:\"急袭\",type:'active',desc:\"对敌方造成两点伤害\"},\r\n    {cardType:\"basic\",num:1,name:\"急袭\",type:'active',desc:\"对敌方造成两点伤害\"},\r\n    {cardType:\"basic\",num:1,name:\"急袭\",type:'active',desc:\"对敌方造成两点伤害\"},\r\n    {cardType:\"basic\",num:1,name:\"急袭\",type:'active',desc:\"对敌方造成两点伤害\"},\r\n    {cardType:\"basic\",num:1,name:\"急袭\",type:'active',desc:\"对敌方造成两点伤害\"},\r\n    {cardType:\"basic\",num:1,name:\"急袭\",type:'active',desc:\"对敌方造成两点伤害\"},\r\n    {cardType:\"basic\",num:1,name:\"急袭\",type:'active',desc:\"对敌方造成两点伤害\"},\r\n    {cardType:\"basic\",num:1,name:\"急袭\",type:'active',desc:\"对敌方造成两点伤害\"},\r\n    {cardType:\"basic\",num:2,name:\"格挡\",type:'counterattack',desc:\"无效对方一张急袭，或者一次怪兽攻击\"},\r\n    {cardType:\"basic\",num:2,name:\"格挡\",type:'counterattack',desc:\"无效对方一张急袭，或者一次怪兽攻击\"},\r\n    {cardType:\"basic\",num:2,name:\"格挡\",type:'counterattack',desc:\"无效对方一张急袭，或者一次怪兽攻击\"},\r\n    {cardType:\"basic\",num:2,name:\"格挡\",type:'counterattack',desc:\"无效对方一张急袭，或者一次怪兽攻击\"},\r\n    {cardType:\"basic\",num:2,name:\"格挡\",type:'counterattack',desc:\"无效对方一张急袭，或者一次怪兽攻击\"},\r\n    {cardType:\"basic\",num:2,name:\"格挡\",type:'counterattack',desc:\"无效对方一张急袭，或者一次怪兽攻击\"},\r\n    {cardType:\"basic\",num:2,name:\"格挡\",type:'counterattack',desc:\"无效对方一张急袭，或者一次怪兽攻击\"},\r\n    {cardType:\"basic\",num:2,name:\"格挡\",type:'counterattack',desc:\"无效对方一张急袭，或者一次怪兽攻击\"},\r\n    {cardType:\"basic\",num:2,name:\"格挡\",type:'counterattack',desc:\"无效对方一张急袭，或者一次怪兽攻击\"},\r\n    {cardType:\"basic\",num:2,name:\"格挡\",type:'counterattack',desc:\"无效对方一张急袭，或者一次怪兽攻击\"},\r\n    {cardType:\"basic\",num:2,name:\"格挡\",type:'counterattack',desc:\"无效对方一张急袭，或者一次怪兽攻击\"},\r\n    {cardType:\"basic\",num:2,name:\"格挡\",type:'counterattack',desc:\"无效对方一张急袭，或者一次怪兽攻击\"},\r\n    {cardType:\"basic\",num:2,name:\"格挡\",type:'counterattack',desc:\"无效对方一张急袭，或者一次怪兽攻击\"},\r\n    {cardType:\"basic\",num:2,name:\"格挡\",type:'counterattack',desc:\"无效对方一张急袭，或者一次怪兽攻击\"},\r\n    {cardType:\"basic\",num:2,name:\"格挡\",type:'counterattack',desc:\"无效对方一张急袭，或者一次怪兽攻击\"},\r\n    {cardType:\"basic\",num:2,name:\"格挡\",type:'counterattack',desc:\"无效对方一张急袭，或者一次怪兽攻击\"},\r\n    {cardType:\"basic\",num:2,name:\"格挡\",type:'counterattack',desc:\"无效对方一张急袭，或者一次怪兽攻击\"},\r\n    {cardType:\"basic\",num:2,name:\"格挡\",type:'counterattack',desc:\"无效对方一张急袭，或者一次怪兽攻击\"},\r\n    {cardType:\"basic\",num:2,name:\"格挡\",type:'counterattack',desc:\"无效对方一张急袭，或者一次怪兽攻击\"},\r\n    {cardType:\"basic\",num:2,name:\"格挡\",type:'counterattack',desc:\"无效对方一张急袭，或者一次怪兽攻击\"},\r\n    {cardType:\"basic\",num:3,name:\"决斗\",type:'active',desc:\"从对方开始轮流出 急袭卡，直到一方无法再出，则收到这次决斗累计的杀数量的伤害+1\"},\r\n    {cardType:\"basic\",num:3,name:\"决斗\",type:'active',desc:\"从对方开始轮流出 急袭卡，直到一方无法再出，则收到这次决斗累计的杀数量的伤害+1\"},\r\n])\r\n//未加入卡片 \r\n//{cardType:'',num:,name:'反守为攻',type:'counterattack',desc:'我方怪兽被攻击时可以发动，我方此怪兽本回合用攻击力进行防御'},\r\nconst botCardList = ref([{},{},{},{},{}])\r\nconst cardsListNow = ref([])\r\nconst usedCardsList = ref([])\r\nconst mesList = ref([])\r\n//历史操作记录\r\nconst monsterCallNum = ref(0)\r\n//双方通用的每回合可召唤次数/回合数量记录\r\nconst whosTurn = ref(\"\")\r\nconst outOfOrder = ((list)=>{\r\n    let len = list.length;\r\n    for (let i = 0; i < len - 1; i++) {\r\n        let index = parseInt(Math.random() * (len - i));\r\n        let temp = list[index];\r\n        list[index] = list[len - i - 1];\r\n        list[len - i - 1] = temp;\r\n    }\r\n    return list;\r\n}) //打乱数组的排列并返回处理完成的数组\r\nconst usedCardsNum = ref(0)\r\n//每回合使用的卡总数\r\nconst monsterNameList = ref([\r\n  {id:0,name:\"无尽假日\"},\r\n  {id:1,name:\"吸血鬼-尼古拉斯\"},\r\n  {id:2,name:\"幽灵水鬼\"},\r\n  {id:3,name:\"初级boss-嗜血树精\"},\r\n])\r\nconst monstersListOnlyRead = ref([\r\n  {name: monsterNameList.value[0].name,start: 7,cost:1,type:\"monster\",num:0,attack:4,defense:3,\r\n  desc:\"当这张卡出场后开始记录，我方回合每使用五张卡发动，从牌堆摸两张卡\",},\r\n  {name: monsterNameList.value[1].name,start: 4,cost:1,type:\"monster\",num:0,attack:2,defense:3,\r\n  desc:\"这样卡每次我方回合结束攻击力上升一点，这张卡被破坏时随机失去一张手牌免于破坏。\",},\r\n  {name: monsterNameList.value[2].name,start: 5,cost:0,type:\"monster\",num:0,attack:5,defense:5,\r\n  desc:\"这样卡将在下一个我方回合到来时破坏。\",},\r\n  {name: monsterNameList.value[3].name,start: 8,cost:0,type:\"monster\",num:0,attack:5,defense:6,\r\n  desc:\"这样卡将在回合结束时对对方造成2点伤害，并为我方恢复2点生命值。\",},\r\n])\r\nconst monstersList = ref([])\r\nconst resetAll = ()=>{\r\n  nextTick(()=>{\r\n    monstersList.value = monstersListOnlyRead.value\r\n    //读取全部怪兽信息\r\n    mesList.value = []\r\n    //清空操作记录\r\n    deg.value = -90\r\n    top.value = -100\r\n    //收起功能按钮\r\n\r\n    usedCardsList.value = []\r\n    cardsListNow.value = []\r\n    botHandCardList.value = []\r\n    myHandCardList.value = []\r\n    //清空牌堆/弃牌堆和双方手牌\r\n\r\n    myMonsterList.value = [{},{},{},{},{}]\r\n    botMonsterList.value = [{},{},{},{},{}]\r\n    myCardList.value = [{},{},{},{},{}]\r\n    botCardList.value = [{},{},{},{},{}]\r\n    //清空场上双方卡牌\r\n\r\n    botLifeNum.value = 20\r\n    myLifeNum.value = 20\r\n    //重置双方血量\r\n    cardsListNow.value = outOfOrder(cardsList.value)\r\n    //新的牌堆\r\n  })\r\n  \r\n}\r\nconst showDialogMes = (title,time,then)=>{\r\n  showDialogCardList.value = false\r\n  //关掉怪兽选取框\r\n  dialogWidth.value = 0\r\n  dialogLeft.value = 200\r\n  showDialog.value = false\r\n  dialogText.value = \"\"\r\n  //清空提示框数据\r\n  nextTick(()=>{\r\n  //title设置显示的文字  time设置显示的时间\r\n    setTimeout(()=>{\r\n      showDialog.value = true\r\n      dialogText.value = title\r\n      dialogWidth.value = 200\r\n      nextTick(()=>{\r\n        setTimeout(()=>{\r\n          dialogLeft.value = 400\r\n          dialogWidth.value = 0\r\n          then()\r\n          showDialog.value = false\r\n        },time)\r\n      })\r\n    },300)\r\n\r\n  })\r\n}\r\nconst reStartGame = (()=>{\r\n  resetAll()\r\n  nextTick(()=>{\r\n    setTimeout(()=>{\r\n      myHandCardList.value = getCardFormList(myHandCardList.value,6)\r\n      botHandCardList.value = getCardFormList(botHandCardList.value,6)\r\n      // botHandCardList.value.push({cardType:\"basic\",num:3,name:\"决斗\",type:'active',desc:\"从对方开始轮流出 急袭卡，直到一方无法再出，则收到这次决斗累计的杀数量的伤害+1\"},) \r\n      // myHandCardList.value.push({cardType:\"basic\",num:3,name:\"决斗\",type:'active',desc:\"从对方开始轮流出 急袭卡，直到一方无法再出，则收到这次决斗累计的杀数量的伤害+1\"},) \r\n      // myHandCardList.value.push({cardType:\"basic\",num:1,name:\"急袭\",type:'active',desc:\"对敌方造成两点伤害\"},) \r\n      // myHandCardList.value.push({cardType:\"basic\",num:1,name:\"急袭\",type:'active',desc:\"对敌方造成两点伤害\"},) \r\n      // botHandCardList.value.push({cardType:\"basic\",num:1,name:\"急袭\",type:'active',desc:\"对敌方造成两点伤害\"},) \r\n      // botHandCardList.value.push({cardType:\"basic\",num:1,name:\"急袭\",type:'active',desc:\"对敌方造成两点伤害\"},) \r\n      // botHandCardList.value.push({cardType:\"basic\",num:1,name:\"急袭\",type:'active',desc:\"对敌方造成两点伤害\"},)\r\n      // myHandCardList.value.push({cardType:\"basic\",num:2,name:\"格挡\",type:'counterattack',desc:\"无效对方一张急袭，或者一次怪兽攻击\"})\r\n      // botHandCardList.value = []\r\n      // myHandCardList.value.push({cardType:'diamond',num:2,name:'护心镜1',type:'equip',desc:'装备的怪兽即将被破坏时，破坏此卡并免疫这次破坏'})\r\n      // myHandCardList.value.push({cardType:'spade',num:2,name:'护心镜2',type:'equip',desc:'装备的怪兽即将被破坏时，破坏此卡并免疫这次破坏'})\r\n      // myHandCardList.value.push({cardType:'diamond',num:2,name:'护心镜3',type:'equip',desc:'装备的怪兽即将被破坏时，破坏此卡并免疫这次破坏'})\r\n      // botHandCardList.value.push({cardType:'spade',num:2,name:'护心镜2',type:'equip',desc:'装备的怪兽即将被破坏时，破坏此卡并免疫这次破坏'})\r\n      //双方发牌\r\n      //确认先后攻 进行第一只召唤\r\n      if(Math.random()>0.5){\r\n        showDialogMes(\"对方先攻\",1500,()=>{\r\n          mesList.value.push(\"对方先攻\")\r\n          botChoiceMonster(monsterNameList.value[3].name,()=>{\r\n            nextTick(()=>{\r\n              setTimeout(()=>{\r\n                myChoiceMonster()\r\n              },2000)\r\n            })\r\n          }\r\n          )\r\n        })\r\n      }else{\r\n        showDialogMes(\"我方先攻\",1500,()=>{\r\n          mesList.value.push(\"我方先攻\")\r\n          myChoiceMonster()\r\n          // botChoiceMonster(monsterNameList.value[3].name,()=>{})\r\n          // myTrun()\r\n        })\r\n      }\r\n    },300)\r\n  })\r\n})\r\nconst showDialog = ref(false)\r\nconst showDialogCardList = ref(false)\r\nconst dialogText = ref(\"\")\r\nconst myChoiceMonster = ()=>{\r\n  dialogWidth.value = 0\r\n  dialogLeft.value = 200\r\n  showDialog.value = false\r\n  showDialogCardList.value = false\r\n  choiceType.value = \"choiceCard\"\r\n  //清空提示框数据\r\n  nextTick(()=>{\r\n    setTimeout(()=>{\r\n      showDialogCardList.value = true\r\n      dialogWidth.value = 200\r\n      mesList.value.push(\"我方查看可召唤怪兽\")\r\n      //展示可选怪兽\r\n    },300)\r\n\r\n  })\r\n}\r\nconst botChoiceMonster =(monsterName,then)=>{\r\n  let monster\r\n  monstersListOnlyRead.value.forEach(item=>{\r\n    if(item.name == monsterName){\r\n      monster = item\r\n    }\r\n  })\r\n  showDialogMes(\"对方召唤了 \"+monster.name,1500,()=>{\r\n    mesList.value.push(\"对方召唤了 \"+monster.name)\r\n  })\r\n  setBotMonster(monster)\r\n  then()\r\n\r\n}\r\nconst setBotMonster = (monster)=>{\r\n  if(!botMonsterList.value[1]?.name){\r\n    botMonsterList.value[1] = monster\r\n  }else if(!botMonsterList.value[0]?.name){\r\n    botMonsterList.value[0] = monster\r\n  }else if(!botMonsterList.value[2]?.name){\r\n    botMonsterList.value[2] = monster\r\n  }else if(!botMonsterList.value[3]?.name){\r\n    botMonsterList.value[3] = monster\r\n  }else if(!botMonsterList.value[4]?.name){\r\n    botMonsterList.value[4] = monster\r\n  }else{\r\n    mesList.value.push(\"没有位置可以进行召唤！\")\r\n  }\r\n}\r\nconst checkCard = (cardList)=>{\r\n  //bot出牌逻辑 暂时只有一张卡设置为优先使用\r\n  let nokillList = []\r\n  let killNum = 0\r\n  cardList.forEach(item=>{\r\n    if(item.name!='急袭'){\r\n      nokillList.push(item)\r\n    }else{\r\n      killNum++\r\n    }\r\n  })\r\n  if(killNum*2>myLifeNum.value){\r\n    //如果一套 急袭 打完能斩杀\r\n    //什么都不做，直接正常走下去\r\n  }else{\r\n    cardList = nokillList\r\n    //留下 急袭卡，用于怪兽攻击，和下次斩杀\r\n  }\r\n  cardList.forEach(item=>{\r\n    if(item.name == '生生不息'){\r\n      return item\r\n    }\r\n  })\r\n  console.log(cardList,\"当前处理的数组\")\r\n  let result = {}\r\n  if(cardList.length<=0){\r\n    return result\r\n  }\r\n  console.log(botCardList.value)\r\n  botCardList.value.map(item=>{\r\n    console.log(item,\"当前对方出牌区域\")\r\n    if(item?.name){\r\n      console.log(\"这个位置被占用了\")\r\n      //如果是已经有数据\r\n    }else{\r\n      //空的\r\n      result = cardList[0]\r\n      //默认就出第一张\r\n    }\r\n  })\r\n  return result\r\n\r\n  //如果没牌出了 就进战阶\r\n}\r\nconst addBotCardToArea = (card)=>{\r\n  if(!botCardList.value[1]?.mode){\r\n    botCardList.value[1] = card\r\n    return true\r\n  }else if(!botCardList.value[0]?.mode){\r\n    botCardList.value[0] = card\r\n    return true\r\n  }else if(!botCardList.value[2]?.mode){\r\n    botCardList.value[2] = card\r\n    return true\r\n  }else if(!botCardList.value[3]?.mode){\r\n    botCardList.value[3] = card\r\n    return true\r\n  }else if(!botCardList.value[4]?.mode){\r\n    botCardList.value[4] = card\r\n    return true\r\n  }else{\r\n    return false\r\n  }\r\n}\r\nconst botFight = ()=>{\r\n  console.log(\"进入对方战斗阶段\")\r\n  let killNum = 0\r\n  botHandCardList.value.forEach(item=>{\r\n    if(item.name==\"急袭\"){\r\n      killNum++\r\n    }\r\n  })\r\n  if(monsterCallNum.value==1||killNum<=0){\r\n    mesList.value.push(\"第一回合不能攻击，自动结束战斗阶段\")\r\n    showDialogMes(\"首回合不能攻击，结束战斗阶段\",1500,()=>{botEndTurn()})\r\n  }else{\r\n    botMonsterList.value = botMonsterList.value.map((item,index)=>{\r\n      item.index = index\r\n      return item\r\n    })\r\n    let attackMonsterList = getMaxtList(botMonsterList.value,[],\"attack\")\r\n    //按照攻击力排序对方怪兽 从低到高\r\n    let defenseMyMonsterList = getMaxtList(myMonsterList.value,[],\"defense\")\r\n    //按照防御力排序我方怪兽\r\n    attackMonsterList.forEach(item=>{\r\n        let myDefenseMonsterList = []\r\n        if(Array.isArray(defenseMyMonsterList)&&defenseMyMonsterList.length<=0){\r\n          mesList.value.push(\"对方直接攻击，造成\"+item.attack+\"点伤害\")\r\n          myLifeNum.value-=item.attack\r\n          botHandCardList.value = delOneCard(\"急袭\",botHandCardList.value)\r\n          //消耗一张 急袭\r\n        }//处理多出来的进行直接攻击\r\n        defenseMyMonsterList.forEach(item1=>{\r\n          if(item.attack>item1.defense){\r\n              mesList.value.push(\"对方的\"+ item.name +\"对我方的\"+item1.name+\"进行了攻击\")\r\n              mesList.value.push(\"造成了\"+ (item.attack-item1.defense) +\"点伤害\")\r\n              myLifeNum.value -= (item.attack-item1.defense)\r\n              botHandCardList.value = delOneCard(\"急袭\",botHandCardList.value)\r\n              //消耗一张 急袭\r\n              if(item1.name==monsterNameList.value[1].name&&Array.isArray(myHandCardList.value)&&myHandCardList.value.length>0){\r\n                //如果是吸血鬼，自动发动不死之身效果\r\n                myLifeNum.value-=item1.cost\r\n                //支付生命值发动效果\r\n                let handCards = []\r\n                let randomNum = Math.ceil(Math.random()*myHandCardList.value.length)\r\n                mesList.value.push(\"随机丢弃的牌是第\"+randomNum+\"张\")\r\n                myHandCardList.value.forEach((item3,index3)=>{\r\n                    if(index3==randomNum-1){\r\n                      //去掉随机丢弃这张\r\n                    }else{\r\n                      handCards.push(item3)\r\n                    }\r\n                })\r\n                myHandCardList.value = handCards\r\n              }else{\r\n                myMonsterList.value = myMonsterList.value.map(item2=>{\r\n                  if(item2.name == item1.name){\r\n                    item2 = {}\r\n                  }\r\n                  return item2\r\n                })//去掉被攻击的我方怪兽\r\n                myCardList.value = myCardList.value.map(item3=>{\r\n                  if(item3==item1?.monsterLinkEquipAttack){\r\n                    item3 = {}\r\n                  }\r\n                  if(item3==item1?.monsterLinkEquipDefense){\r\n                    item3 = {}\r\n                  }\r\n                  return item3\r\n                })\r\n              }\r\n              \r\n              // showDialogMes((\"对方使用 \"+ item.name + \" 攻击我方 \" + item1.name),1500,()=>{})\r\n          }else{\r\n            myDefenseMonsterList.push(item1)\r\n          }\r\n        })\r\n        defenseMyMonsterList = myDefenseMonsterList\r\n      \r\n    })\r\n    nextTick(()=>{\r\n      showDialogMes(\"对方结束战斗阶段\",1500,()=>{botEndTurn()})\r\n    })\r\n  }\r\n\r\n}//为了方便处理，所有怪兽限一\r\nconst getMaxtList = (list,resultList,ability)=>{\r\n  //根据数据内某个指定的数据进行排序\r\n  console.log(ability)\r\n  let max\r\n  let resList = []\r\n  let isFirst = true\r\n  list.forEach((item)=>{\r\n    if(item?.name){\r\n      if(isFirst){\r\n        max = item\r\n        max.index = item.index\r\n        isFirst = false\r\n      }else{\r\n        if(max[ability]){\r\n          if(max[ability]<item[ability]){\r\n            max = item,\r\n            max.index = item.index\r\n          }\r\n        }else{\r\n          max = item\r\n          max.index = item.index\r\n        }\r\n      }\r\n      \r\n    }\r\n  })\r\n  console.log(max)\r\n  list.forEach(item=>{\r\n    if(item?.name){\r\n      if(item.name!=max.name){\r\n      resList.push(item)\r\n    }\r\n    }\r\n  })\r\n  console.log(resList)\r\n  resultList.push(max)\r\n  if(Array.isArray(resList) && resList?.length>0){\r\n    return getMaxtList(resList,resultList,ability)\r\n  }else{\r\n    return resultList\r\n  }\r\n}\r\n\r\nconst botEndTurn= ()=>{\r\n  mesList.value.push(\"对方进入弃牌阶段\")\r\n  showDialogMes(\"对方进入弃牌阶段\",1500,()=>{botHandCardList.value = endTurnLostCard(botHandCardList.value,\"对方\");myTrun()})\r\n}\r\nconst botHasMonster = ()=>{\r\n  let result = false\r\n  botMonsterList.value.forEach(item=>{\r\n    if(item?.name){\r\n      result = true\r\n    }\r\n  })\r\n  return result\r\n}\r\nconst botUseCard =()=>{\r\n  console.log(\"处理bot的出牌逻辑\")\r\n  // console.log(botCardList.value)\r\n    nextTick(()=>{\r\n      let card = checkCard(botHandCardList.value)\r\n      let canGo = true\r\n    //确认bot要出的牌\r\n    console.log(card)\r\n    if(!card?.type){\r\n      //如果当前没牌能出，则进战)\r\n      showDialogMes(\"对方战斗阶段\",1500,()=>{botFight()})\r\n    }else{\r\n      if(card.type ==\"counterattack\"){\r\n        //如果是反击卡\r\n        card.mode = \"back\"\r\n      }else if(card.type ==\"equip\"){\r\n        //如果是装备卡(装备卡也可以伏盖，bot暂时没这种逻辑)\r\n        if(botHasMonster()){\r\n          //如果有对应的怪兽可以挂装备\r\n        }else{\r\n          //中断这次的逻辑，因为没有怪兽给你挂装备\r\n          canGo = false\r\n        }\r\n        card.mode = \"equip\"\r\n      }else if(card.type ==\"active\"){\r\n        //如果是装备卡(装备卡也可以伏盖，bot暂时没这种逻辑)\r\n        card.mode = \"active\"\r\n      }\r\n      if(canGo){\r\n        if(addBotCardToArea(card)){\r\n        //如果成功放入\r\n        let botHandResult = []\r\n        botHandCardList.value.forEach(item=>{\r\n          if(item==card){\r\n            //从手卡去除当前使用的卡\r\n          }else{\r\n            botHandResult.push(item)\r\n          }\r\n        })\r\n        botHandCardList.value = botHandResult\r\n        if(card.mode==\"back\"){\r\n          mesList.value.push(\"对方伏盖了一张卡\")\r\n          showDialogMes(\"对方伏盖了一张卡\",1500,()=>{botUseCard()})\r\n          //伏盖卡片不需要马上处理\r\n        }else if(card.mode==\"equip\"){\r\n          mesList.value.push(\"对方装备了\"+card.name)\r\n\r\n          botMonsterList.value =  botMonsterList.value.map(item=>{\r\n            if(item.name==monsterNameList.value[0].name){\r\n              //处理用五摸二的怪物能力\r\n              item.num++//标记加1\r\n              if(item.num>=5){\r\n                //如果够五张,触发摸牌能力\r\n                botHandCardList.value = getCardFormList(botHandCardList.value,2)\r\n                mesList.value.push(\"触发了\" +monsterNameList.value[0].name+\"能力，摸两张牌\")\r\n                item.num = 0\r\n                botLifeNum.value-=1\r\n                //支付生命值\r\n              }\r\n            }\r\n            return item\r\n          })\r\n          //只有装备或者使用算，伏盖不算入本回合使用的卡\r\n          \r\n          console.log(botCardList.value)\r\n          nextTick(()=>{\r\n            //绑定装备的怪兽名称\r\n            botCardList.value = checkEquip(card,botCardList.value)\r\n            console.log(botCardList.value)\r\n            showDialogMes(\"对方装备了\"+card.name,1500,()=>{botUseCard()})\r\n            //装备卡片只需要在伤害结算或者装备顶掉了的时候才需要改动\r\n          })\r\n          \r\n        }else if(card.mode==\"active\"){\r\n          mesList.value.push(\"对方发动了\"+card.name)\r\n          botMonsterList.value =  botMonsterList.value.map(item=>{\r\n            if(item.name==monsterNameList.value[0].name){\r\n              //处理用五摸二的怪物能力\r\n              item.num++//标记加1\r\n              if(item.num>=5){\r\n                //如果够五张,触发摸牌能力\r\n                botHandCardList.value = getCardFormList(botHandCardList.value,2)\r\n                mesList.value.push(\"触发了\" +monsterNameList.value[0].name+\"能力，摸两张牌\")\r\n                item.num = 0\r\n                botLifeNum.value-=1\r\n                //支付生命值\r\n              }\r\n            }\r\n            return item\r\n          })\r\n          //只有装备或者使用算，伏盖不算入本回合使用的卡\r\n          showDialogMes(\"对方发动了\"+card.name,1300,()=>{\r\n            //只有装备或者使用算，伏盖不算入本回合使用的卡\r\n          useActive(card,botCardList.value)\r\n          })\r\n          \r\n        }\r\n        \r\n      }else{\r\n        showDialogMes(\"对方战斗阶段\",1500,()=>{botFight()})\r\n        //结束循环\r\n      }\r\n      }\r\n    }\r\n    })\r\n}\r\nconst checkEquip = (card,cardList)=>{\r\n  // nextTick(()=>{\r\n  let hasInput = false\r\n    botMonsterList.value = botMonsterList.value.map(item=>{\r\n      if(item?.name&&!hasInput){\r\n        card.equipLinkMonster = {\r\n          name:item.name,start:item.start,cost:item.cost,type:item.type,num:item.num,attack:item.attack,defense:item.defense,\r\n        }\r\n        if(card.cardType==\"spade\"){\r\n          item.monsterLinkEquipAttack = {cardType:card.cardType,num:card.type,name:card.name,type:card.type,desc:card.desc,}\r\n        }else if(card.cardType==\"diamond\"){\r\n          item.monsterLinkEquipDefense = {cardType:card.cardType,num:card.type,name:card.name,type:card.type,desc:card.desc,}\r\n        }\r\n        hasInput = true\r\n      }\r\n      return item\r\n    })\r\n    console.log(card,cardList)\r\n    let newCardList = []\r\n    let cancel = false\r\n    for(let i =0;i<cardList.length;i++){\r\n      if(cancel&&card.cardType==cardList[i].cardType&&card.type==cardList[i].type){\r\n        newCardList.push({card})\r\n        recycleList.value.push()\r\n        //直接顶掉同类型的装备\r\n        recycleList.value.push(cardList[i])\r\n        //加入弃牌堆\r\n      }else if(card.cardType==cardList[i].cardType&&card.type==cardList[i].type){\r\n        //确保顶掉的是装备而且是同为防御/进攻装备\r\n        cancel = true\r\n        newCardList.push(card)\r\n      }else{\r\n        newCardList.push(cardList[i])\r\n      }\r\n      console.log(newCardList)\r\n    }\r\n\r\n    cardList = newCardList\r\n    console.log(cardList)\r\n    return cardList\r\n  // })\r\n  \r\n  \r\n}\r\nconst delectCardActive = (card,usedManList)=>{\r\n  let usedList = []\r\n      usedManList.forEach(item=>{\r\n        if(item!=card){\r\n          //因为人机不会盖放除了反击外的卡，所以这里一定是唯一的\r\n          usedList.push(item)\r\n        }else{\r\n          usedList.push({})\r\n        }\r\n      })\r\n      botCardList.value = usedList\r\n      //去掉卡片占用的发动占位\r\n      recycleList.value.push(card)\r\n      //加入弃牌堆\r\n}\r\nconst activeCard = ref({})\r\nconst useActive = (card,usedManList)=>{\r\n  //active类型卡的操作处理\r\n  activeCard.value = card\r\n  botHandCardList.value\r\n  if(card.name == \"急袭\"){\r\n    choiceType.value=\"defenseCard\"\r\n    monstersList.value = []\r\n    recycleList.value.push(card)\r\n    //发动后加入弃牌堆\r\n    myCardList.value.forEach(item=>{\r\n      if(item.name==\"格挡\"){\r\n        monstersList.value.push(item)\r\n      }\r\n    })\r\n    monstersList.value.push({name:\"不响应\"})\r\n    showDialogCardList.value = true\r\n    dialogWidth.value = 200\r\n    dialogLeft.value = 200\r\n  }else if(card.name == \"决斗\"){\r\n    duelNum.value = 2\r\n    //重置决斗伤害\r\n    choiceType.value=\"duel\"\r\n    monstersList.value = []\r\n    recycleList.value.push(card)\r\n    //发动后加入弃牌堆\r\n    myHandCardList.value.forEach(item=>{\r\n      if(item.name==\"急袭\"){\r\n        monstersList.value.push(item)\r\n      }\r\n    })\r\n    monstersList.value.push({name:\"不响应\"})\r\n    showDialogCardList.value = true\r\n    dialogWidth.value = 200\r\n    dialogLeft.value = 200\r\n  }else{\r\n    delectCardActive(activeCard.value,botCardList.value)\r\n    //清除卡片（仅用于卡片效果梅全部完成）\r\n    botUseCard()\r\n    //继续对方出牌\r\n  }\r\n}\r\nconst botTurn = ()=>{\r\n  monsterCallNum.value++\r\n  whosTurn.value = \"bot\"\r\n  mesList.value.push(\"对方的回合\")\r\n  botHandCardList.value = getCardFormList(botHandCardList.value,2)\r\n  mesList.value.push(\"对方抽了两张卡\")\r\n  usedCardsNum.value = 0\r\n  let hasMonster = false\r\n  botMonsterList.value.forEach(item=>{\r\n    if(item?.name){\r\n      hasMonster = true\r\n    }\r\n  })\r\n  if(!hasMonster){\r\n    //如果场上没有怪兽，那么就要进行召唤\r\n    //(除了第一次拉出来的怪，后面的都需要支付对应等级的生命值)\r\n    let cost\r\n    monstersList.value.forEach(item=>{\r\n      if(item.name == monsterNameList.value[3].name){\r\n        cost = item.start\r\n      }\r\n    })\r\n    botLifeNum.value -=cost\r\n    //支付生命值\r\n    botChoiceMonster(monsterNameList.value[3].name,()=>{\r\n      botUseCard()\r\n    })\r\n  }else{\r\n    botUseCard()\r\n  }\r\n  \r\n\r\n}\r\nconst myCardAreaCan = ref([])\r\nconst myCardIndex = ref(-1)\r\nconst showMyCardArea =()=>{\r\n  myCardAreaCan.value = []\r\n  let isOver = true\r\n  if(!myCardList.value[0]?.name){\r\n    myCardAreaCan.value.push(true)\r\n    isOver = false\r\n  }else{\r\n    myCardAreaCan.value.push(false)\r\n  }\r\n  if(!myCardList.value[1]?.name){\r\n    myCardAreaCan.value.push(true)\r\n    isOver = false\r\n  }else{\r\n    myCardAreaCan.value.push(false)\r\n  }\r\n  if(!myCardList.value[2]?.name){\r\n    myCardAreaCan.value.push(true)\r\n    isOver = false\r\n  }else{\r\n    myCardAreaCan.value.push(false)\r\n  }\r\n  if(!myCardList.value[3]?.name){\r\n    myCardAreaCan.value.push(true)\r\n    isOver = false\r\n  }else{\r\n    myCardAreaCan.value.push(false)\r\n  }\r\n  if(!myCardList.value[4]?.name){\r\n    myCardAreaCan.value.push(true)\r\n    isOver = false\r\n  }else{\r\n    myCardAreaCan.value.push(false)\r\n  }\r\n  if(isOver){\r\n    mesList.value.push(\"没有位置可以使用或者伏盖卡片！\")\r\n  }\r\n}\r\nconst isMyturn = ref(false)\r\nconst showMyHandCardButton = ref(false)\r\nconst myHandCardUsedList = ref([])\r\nconst myUseCardIndex = ref(-1)\r\nconst myUseCards = (item,index)=>{\r\n  myUseCardIndex.value = index\r\n  showMyHandCardButton.value = !showMyHandCardButton.value\r\n  if(item.type == \"equip\"){\r\n    myHandCardUsedList.value = [\"伏盖\"]\r\n    let haveMonster = false\r\n    myMonsterList.value.forEach(item=>{\r\n      if(item?.name){\r\n        haveMonster = true\r\n      }\r\n    })\r\n    if(haveMonster){\r\n      myHandCardUsedList.value.push(\"装备\")\r\n    }\r\n  }\r\n  if(item.type == \"counterattack\"){\r\n    myHandCardUsedList.value = [\"伏盖\"]\r\n  }\r\n  if(item.type == \"active\"){\r\n    myHandCardUsedList.value = [\"发动\",\"伏盖\"]\r\n  }\r\n  // if()\r\n}\r\nconst usingCard = ref({})\r\nconst tipsValue = ref(\"\")\r\nconst getTipsStyle =()=>{\r\n  if(tipsValue.value.length<=0){\r\n    return \"opacity:0\"\r\n  }else{\r\n    return \"opacity:1\"\r\n  }\r\n}\r\nconst showTipsMes = (title,then)=>{\r\n  nextTick(()=>{\r\n    tipsValue.value = title\r\n    nextTick(()=>{\r\n      setTimeout(()=>{\r\n        tipsValue.value = \"\"\r\n        then()\r\n      },5000)\r\n    })\r\n  })\r\n}\r\nconst canUseCard = (list)=>{\r\n  let result = false\r\n  list.forEach(item=>{\r\n    if(!item?.name){\r\n      result = true\r\n    }//有一个空位就返回可以\r\n  })\r\n  return result\r\n}\r\nconst useMyHandCards = (name,item)=>{\r\n  usingCard.value = item\r\n  if(canUseCard(myCardList.value)){\r\n    if(name==\"伏盖\"){\r\n      isShowSureCancelBlock.value = true\r\n      showMyCardArea()//控制可选区域变色\r\n      choiceType.value = \"cover\"\r\n    }else if(name == \"装备\"){\r\n      choiceType.value = \"equip\"\r\n      if(myMonsterList.value.length<1){\r\n        console.log(\"触发了装备\")\r\n        showTipsMes(\"没有可以装备的怪兽，无法使用装备卡\",()=>{})\r\n\r\n      }else{\r\n        let monsterList = []\r\n        myMonsterList.value.forEach(item=>{\r\n          if(item?.name){\r\n            monsterList.push(item)\r\n          }\r\n        })\r\n        myMonsterList.value =  myMonsterList.value.map(item=>{\r\n            if(item.name==monsterNameList.value[0].name){\r\n              //处理用五摸二的怪物能力\r\n              item.num++//标记加1\r\n              if(item.num>=5){\r\n                //如果够五张,触发摸牌能力\r\n                myHandCardList.value = getCardFormList(myHandCardList.value,2)\r\n                mesList.value.push(\"触发了\" +monsterNameList.value[0].name+\"能力，摸两张牌\")\r\n                item.num = 0\r\n                botLifeNum.value-=1\r\n                //支付生命值\r\n              }\r\n            }\r\n            return item\r\n          })\r\n          //只有装备或者使用算，伏盖不算入本回合使用的卡\r\n        monstersList.value = monsterList\r\n        isMonsterEquip.value = true\r\n        showDialogCardList.value = true\r\n        dialogWidth.value = 0\r\n        dialogLeft.value = 200\r\n        dialogWidth.value = 200\r\n\r\n        // console.log(choiceIndex.value)//当前选中的卡牌的index\r\n        \r\n        console.log()\r\n      }\r\n\r\n    }else if(name == \"发动\"){\r\n      myMonsterList.value =  myMonsterList.value.map(item=>{\r\n            if(item.name==monsterNameList.value[0].name){\r\n              //处理用五摸二的怪物能力\r\n              item.num++//标记加1\r\n              if(item.num>=5){\r\n                //如果够五张,触发摸牌能力\r\n                myHandCardList.value = getCardFormList(myHandCardList.value,2)\r\n                mesList.value.push(\"触发了\" +monsterNameList.value[0].name+\"能力，摸两张牌\")\r\n                item.num = 0\r\n                botLifeNum.value-=1\r\n                //支付生命值\r\n              }\r\n            }\r\n            return item\r\n          })\r\n          //只有装备或者使用算，伏盖不算入本回合使用的卡\r\n      myActiveCard()\r\n    }\r\n  }else{\r\n    //没有格子可以使用卡片\r\n  }\r\n  \r\n}\r\nconst myActiveCard = ()=>{\r\n  //在这处理所有卡的发动逻辑\r\n  // console.log(\"我方发动了\"+usingCard.value.name)\r\n  mesList.value.push(\"我方发动了\"+usingCard.value.name)\r\n  if(usingCard.value.name == \"急袭\"){\r\n    let result = []\r\n    let hasdel = false\r\n    recycleList.value.push(usingCard.value)\r\n    botCardList.value.forEach(item=>{\r\n      if(item.name== \"格挡\"&&!hasdel){\r\n        recycleList.value.push(item)\r\n        result.push({})\r\n        hasdel = true\r\n      }else{\r\n        result.push(item)\r\n      }\r\n    })\r\n    botCardList.value =result\r\n    if(hasdel){\r\n      //进行了格挡\r\n      showDialogMes(\"对方格挡\",1000,()=>{\r\n        mesList.value.push(\"对方进行了格挡\")\r\n      })\r\n    }else{\r\n      botLifeNum.value-=2\r\n      showDialogMes(\"成功命中\",1000,()=>{\r\n        mesList.value.push(\"对方没有进行格挡，失去两点生命值.\")\r\n      })\r\n    }\r\n    myHandCardList.value = cleanCard(myHandCardList.value,usingCard.value)\r\n  }else if(usingCard.value.name == \"决斗\"){\r\n    duelNum.value = 2\r\n    console.log(\"我方发动决斗\")\r\n    //重置决斗基础伤害\r\n    // mesList.value.push(\"我方发动决斗\")\r\n    botCheckDuel()\r\n    myHandCardList.value = cleanCard(myHandCardList.value,usingCard.value)\r\n    //清除卡片 决斗\r\n  }else{\r\n    myHandCardList.value = cleanCard(myHandCardList.value,usingCard.value)\r\n    //清除卡片（仅用于卡片效果梅全部完成）\r\n  }\r\n}\r\n\r\nconst myTrun = ()=>{\r\n  whosTurn.value = \"me\"\r\n  monsterCallNum.value++\r\n  nowStep.value = 0\r\n  //进入我方主1\r\n  mesList.value.push(\"我方的回合\")\r\n  myHandCardList.value = getCardFormList(myHandCardList.value,2)\r\n  mesList.value.push(\"我方抽了两张卡\")\r\n  usedCardsNum.value = 0\r\n  isMyturn.value = true\r\n}\r\nconst getCardFormList = (list,num)=>{\r\n  if(cardsListNow.value<=num){\r\n    console.log(\"牌堆的牌过少，弃牌堆中的牌将进行回收\")\r\n    console.log(\"弃牌堆：\",recycleList.value.length)\r\n    console.log(\"牌堆：\",cardsListNow.value.length)\r\n    recycleList.value.forEach(item=>{\r\n      cardsListNow.value.push(item)\r\n    })\r\n    cardsListNow.value = outOfOrder(cardsListNow.value)\r\n    recycleList.value = []\r\n    //清空弃牌堆\r\n  }\r\n  let listNow = []\r\n  for(let i=0;i<cardsListNow.value.length;i++){\r\n    if(i<num){\r\n      list.push(cardsListNow.value[i])\r\n    }else{\r\n      listNow.push(cardsListNow.value[i])\r\n    }\r\n  }\r\n  cardsListNow.value = listNow\r\n  //更新牌堆\r\n  console.log(\"牌堆剩下:\",listNow.length)\r\n  return list\r\n  //返回处理后的数组\r\n}\r\nconst recycleList = ref([])\r\nconst endTurnLostCard = (list,who)=>{\r\n  mesList.value.push(who+\"进行弃牌处理\")\r\n  let num = list.length-6\r\n  if(num<0){\r\n    num = 0\r\n  }\r\n  let result = []\r\n  mesList.value.push(who+\"需要弃置\"+num+'张牌')\r\n  for(let i= 0;i<list.length ;i++){\r\n    if(i>=6){\r\n      recycleList.value.push(list[i])\r\n    }else{\r\n      result.push(list[i])\r\n    }\r\n  }\r\n  return result \r\n}\r\n\r\nconst deg = ref(-90)\r\nconst top = ref(-100)\r\nconst changeTest = (()=>{\r\n  \r\n  let testList = [{name:3,attack:3},{name:5,attack:5},{name:1,attack:1},{},{}]\r\n  testList = testList.map((item,index)=>{\r\n      item.index = index\r\n      return item\r\n    })\r\n  console.log(getMaxtList(testList,[],\"attack\"))\r\n  // if(dialogWidth.value ==0){\r\n  //   dialogWidth.value =200\r\n  // }else{\r\n  //   dialogWidth.value = 0\r\n  // }\r\n  // if(deg.value == -90){\r\n  //   deg.value = 0\r\n  //   top.value = 0\r\n  // }else{\r\n  //   deg.value = -90\r\n  //   top.value = -100\r\n  // }\r\n  // myHandCardList.value = getCardFormList(myHandCardList.value,6)\r\n  // botHandCardList.value = getCardFormList(botHandCardList.value,6)\r\n  // //模拟摸6，然后弃牌测试自循环逻辑\r\n  // myHandCardList.value = endTurnLostCard(myHandCardList.value,\"我方\")\r\n  // botHandCardList.value = endTurnLostCard(botHandCardList.value,\"对方\")\r\n})\r\nconst getDeg = (()=>{\r\n  return \"transform:rotate( \"+ deg.value +\"deg);top:\"+ top.value+\"px;\"\r\n})\r\n\r\nconst leftToplock = ref(true)\r\n\r\nconst showLeftTopButtons =(()=>{\r\n  deg.value = 0\r\n  top.value = 0\r\n  nextTick(()=>{\r\n    setTimeout(()=>{\r\n    leftToplock.value = false\r\n  },200)\r\n  })\r\n})\r\nconst closeLeftTopButtons =(()=>{\r\n  if(!leftToplock.value){\r\n    deg.value = -90\r\n    top.value = -100\r\n    leftToplock.value = true\r\n  }\r\n  \r\n})\r\n\r\nconst botLifeNum= ref(20)\r\nconst getBotLive = (()=>{\r\n  let css \r\n  css = \"width:\" + 404 * botLifeNum.value/20 + \"px;\"\r\n  return css\r\n})\r\nconst myLifeNum= ref(20)\r\nconst getMyLive = (()=>{\r\n  let css \r\n  css = \"width:\" + 400 * myLifeNum.value/20 + \"px;\"\r\n  return css\r\n})\r\nwatch(botLifeNum,(newVal,oldVal)=>{\r\n  if(newVal<=0){\r\n    mesList.value.push(\"对方生命值耗尽，游戏结束\")\r\n  }\r\n})\r\nwatch(myLifeNum,(newVal,oldVal)=>{\r\n  if(newVal<=0){\r\n    mesList.value.push(\"我方生命值耗尽，游戏结束\")\r\n  }\r\n})\r\n\r\nconst botMonsterList = ref([{},{},{},{},{}])\r\nconst myMonsterList = ref([{},{},{},{},{}])\r\nconst myCardList = ref([{},{},{},{},{}])\r\nconst detailMes = ref({})\r\nconst showCardDetail = ((item)=>{\r\n  detailMes.value = {}\r\n  detailMes.value.name = item.name\r\n  detailMes.value.desc = item.desc\r\n  detailMes.value.type = item.type\r\n  detailMes.value.equipLinkMonster = item?.equipLinkMonster?item.equipLinkMonster:null\r\n  detailMes.value.monsterLinkEquipAttack = item?.monsterLinkEquipAttack?item.monsterLinkEquipAttack:null\r\n  detailMes.value.monsterLinkEquipDefense = item?.monsterLinkEquipDefense?item.monsterLinkEquipDefense:null\r\n  if(detailMes.value.type==\"monster\"){\r\n    detailMes.value.start = item.start\r\n    detailMes.value.cost = item.cost\r\n    detailMes.value.attack = item.attack\r\n    detailMes.value.defense = item.defense\r\n    detailMes.value.num = item.num\r\n  }\r\n\r\n})\r\nconst getTypeText = (type)=>{\r\n  if(type == \"equip\"){\r\n    return \"装备\"\r\n  }else if(type == \"active\"){\r\n    return \"主动\"\r\n  }else if(type == \"counterattack\"){\r\n    return \"反击\"\r\n  }else if(type == \"monster\"){\r\n    return \"怪兽\"\r\n  }\r\n}\r\nconst myHandCardList = ref([])\r\nconst getMyHandCardStyle =()=>{\r\n  let border = 1\r\n  if(myHandCardList.value.length>=9){\r\n    border = 2\r\n  }\r\n  if(myHandCardList.value.length>=16){\r\n    border = 3\r\n  }\r\n  let width = 360/myHandCardList.value.length-border\r\n  if(myHandCardList.value.length<=6){\r\n    width = 60\r\n  }\r\n  let result = \"width:\"+width +\"px;\"\r\n  if(width<15){\r\n    result+= \"font-size:\"+ width +\"px;\"\r\n  }\r\n  return result\r\n}\r\n\r\nconst botHandCardList = ref([])\r\nconst getBotHandCardStyle = ()=>{\r\n  let border = 1\r\n  if(botHandCardList.value.length>=8){\r\n    border = 2\r\n  }\r\n  if(myHandCardList.value.length>=16){\r\n    border = 3\r\n  }\r\n  let width = 364/botHandCardList.value.length-border\r\n  if(botHandCardList.value.length<=7){\r\n    width = 45\r\n  }\r\n  let result = \"width:\"+width +\"px;\"\r\n  if(width<11.5){\r\n    result+= \"font-size:\"+ width +\"px;\"\r\n  }\r\n  return result\r\n}\r\nconst dialogWidth = ref(0)\r\n// 0~200\r\nconst dialogLeft = ref(200)\r\n// 200~400\r\nconst dialogStyle = ()=>{\r\n  let result\r\n  result = \"width:\" + dialogWidth.value + \"px;\"\r\n  result += \"left:\" +dialogLeft.value +\"px;\"\r\n  return result \r\n}\r\nconst getMonsterName = (name)=>{\r\n  if(!name)return \"\"\r\n  let list = name.split(\"-\")\r\n  if(list.length==1){\r\n    return list[0]\r\n  }else{\r\n    return list[1]\r\n  }\r\n}\r\nconst getStartNum = (start)=>{\r\n  let result = \"\"\r\n  for(let i=0; i<start;i++){\r\n    result+=\"♥\"\r\n  }\r\n  return result\r\n}\r\nconst choiceType = ref(\"\")\r\nconst isShowSureCancelBlock = ref(false)\r\nconst showSureAndCancel = ()=>{\r\n  isShowSureCancelBlock.value = true\r\n}\r\nconst choiceIndex = ref(-1)\r\nconst choiceCardIndex = (index)=>{\r\n  choiceIndex.value = index\r\n}\r\nconst isChoiceCard = (index)=>{\r\n  if(index == choiceIndex.value){\r\n    return \"background:#eee;\"\r\n  }else{\r\n    return \"\"\r\n  }\r\n}\r\nconst isMonsterEquip = ref(false)\r\nconst makeSure = ()=>{\r\n  console.log(\"choiceType:\", choiceType.value)\r\n  if(choiceType.value == \"choiceCard\"){\r\n    if(!isMonsterEquip.value){\r\n      mesList.value.push(\"我方选择了：\"+monstersList.value[choiceIndex.value].name)\r\n      choiceType.value = \"choiceArea\"\r\n      dialogWidth.value = 0\r\n      dialogLeft.value = 200\r\n      showDialog.value = false\r\n      showDialogCardList.value = false\r\n      //清空提示框数据\r\n      showDialogMes(\"我方选择了 \"+monstersList.value[choiceIndex.value].name,1500,()=>{\r\n        showMyMonsterArea()\r\n\r\n      })\r\n    }\r\n    \r\n  }else if(choiceType.value == \"choiceArea\"){\r\n    mesList.value.push(\"我方召唤了\"+monstersList.value[choiceIndex.value].name)\r\n    isShowSureCancelBlock.value = false\r\n    if(myMonsterCardIndex.value==-1){\r\n      myMonsterCardIndex.value = 0\r\n      myMonsterAreaCan.value = [false,false,false,false,false]\r\n    }//如果不选直接点确定 默认召唤到第一个位置\r\n    myMonsterList.value[myMonsterCardIndex.value] = monstersList.value[choiceIndex.value]\r\n    myMonsterCardIndex.value = -1//重置选择我方怪兽位置\r\n    myMonsterAreaCan.value = [false,false,false,false,false]//重置可选怪兽区域（背景色)\r\n    choiceIndex.value = -1\r\n    //重置选中阴影\r\n    console.log(botMonsterList.value.length)\r\n    let botHasMonster = false\r\n    botMonsterList.value.forEach(item=>{\r\n      console.log(item)\r\n      if(item?.name){\r\n        //检查name属性确认是否存在数据\r\n        botHasMonster = true\r\n      }\r\n    })\r\n    if(botHasMonster){\r\n      nextTick(()=>{\r\n        setTimeout(()=>{\r\n          mesList.value.push(\"对方出牌阶段\")\r\n          showDialogMes(\"对方出牌阶段\",1500,()=>{botTurn()})\r\n        },2000)\r\n      })\r\n    }else{\r\n      showDialogMes(\"对方进行召唤\",1500,()=>{\r\n          mesList.value.push(\"对方进行召唤\")\r\n          botChoiceMonster(monsterNameList.value[3].name,()=>{\r\n            nextTick(()=>{\r\n              setTimeout(()=>{\r\n                mesList.value.push(\"我方出牌阶段\")\r\n                showDialogMes(\"我方出牌阶段\",1500,()=>{myTrun()})\r\n              },2000)\r\n            })\r\n          }\r\n          )\r\n          })\r\n    }\r\n    \r\n  }else if(choiceType.value == \"cover\"){\r\n    usingCard.value.cover = true\r\n    MyCarnArea()\r\n    //展示可选的位置\r\n    console.log(usingCard.value )\r\n    mesList.value.push(\"我方伏盖了\"+usingCard.value.name)\r\n    myCardAreaCan.value = [false,false,false,false,false]\r\n    myCardIndex.value = -1\r\n    isShowSureCancelBlock.value = false\r\n    myHandCardList.value=cleanCard(myHandCardList.value,usingCard.value)\r\n\r\n  }else if(choiceType.value == \"equip\"){\r\n    //是装备方法的话，走这里\r\n      mesList.value.push(\"我方装备\" + myHandCardList.value[myUseCardIndex.value].name+\" 给\"+monstersList.value[choiceIndex.value].name)\r\n      \r\n      showDialogCardList.value = false\r\n      //关掉卡片选择，下一步选择装备卡放的位置\r\n      dialogLeft.value = 400\r\n      dialogWidth.value = 0\r\n      choiceType.value = \"choiceEquipArea\"\r\n      //关闭提示框,改变确认按钮的功能为选择区域\r\n      showMyCardArea()\r\n      //展示可选的位置\r\n  }else if(choiceType.value == \"choiceEquipArea\"){\r\n    if(myCardIndex.value==-1){\r\n      mesList.value.push(\"请先选择卡片放置的位置!\")\r\n    }else{\r\n      myCardAreaCan.value = [false,false,false,false,false]\r\n      //关掉展示可放位置\r\n      console.log(myCardIndex.value,myHandCardList.value[myUseCardIndex.value])\r\n      myCardList.value = myCardList.value.map((item,index)=>{\r\n        if(index == myCardIndex.value){\r\n          item = myHandCardList.value[myUseCardIndex.value]\r\n          item.equipLinkMonster = monstersList.value[choiceIndex.value]\r\n          //保存绑定的怪兽数据\r\n        }\r\n        if(index != myCardIndex.value && item.cardType==myHandCardList.value[myUseCardIndex.value].cardType){\r\n          recycleList.value.push(item)\r\n          mesList.value.push(\"我方装备了同类装备，前者自动进入弃牌堆\")\r\n          item = {}\r\n        }\r\n        return item\r\n      })\r\n      console.log(myMonsterCardIndex.value)\r\n      myMonsterList.value = myMonsterList.value.map((item)=>{\r\n        if(item?.name){\r\n          if(choiceIndex.value==0){\r\n            myCardList.value.forEach((item1,index1)=>{\r\n            if(index1 == myCardIndex.value){\r\n              if(item1.cardType ==\"spade\"){\r\n                item.monsterLinkEquipAttack = item1\r\n              }else if(item1.cardType ==\"diamond\"){\r\n                item.monsterLinkEquipDefense = item1\r\n              }\r\n            }//保存绑定的装备数据\r\n          })\r\n          }else{\r\n            choiceIndex.value--\r\n          }\r\n        }\r\n        return item\r\n      })\r\n      console.log(myMonsterList.value)\r\n      myCardIndex.value = -1\r\n      isShowSureCancelBlock.value = false//关闭确认和取消按钮\r\n      let handList = []\r\n      myHandCardList.value = myHandCardList.value.forEach(item=>{\r\n        if(item == myHandCardList.value[myUseCardIndex.value]){\r\n          //从手卡去掉这张卡\r\n        }else{\r\n          handList.push(item)\r\n        }\r\n      })\r\n      myHandCardList.value = handList\r\n    }\r\n  }else if(choiceType.value == \"attack\"){\r\n    //myMonsterCardIndex\r\n    console.log(attackMyMonsterIndex.value)\r\n    let result\r\n    myMonsterList.value.forEach((item,index)=>{\r\n      if(index == attackMyMonsterIndex.value){\r\n        result = item\r\n      }\r\n    })\r\n    mesList.value.push(\"我方使用\"+result.name+\"攻击对方\"+ monstersList.value[choiceIndex.value].name )\r\n    let damage = result.attack-monstersList.value[choiceIndex.value].defense\r\n    delOneCard(\"急袭\",myHandCardList.value)\r\n    //消耗掉一张急袭\r\n    if(monstersList.value[choiceIndex.value].name==\"直接攻击\"){\r\n      damage = result.attack\r\n    }\r\n    if(damage>0){\r\n      mesList.value.push(\"我方对对方造成了\"+damage+\"点伤害\")\r\n      botLifeNum.value -= damage\r\n      botMonsterList.value = botMonsterList.value.map(item=>{\r\n        if(monstersList.value[choiceIndex.value].name == item.name){\r\n          console.log(item)\r\n          if(item?.monsterLinkEquipAttack){\r\n            //如果有装备，则装备也一起去掉\r\n            botCardList.value = botCardList.value.map(item1=>{\r\n              if(item1.name==item.monsterLinkEquipAttack.name){\r\n                item1 = {}\r\n              }\r\n              return item1\r\n            })\r\n          }\r\n          if(item?.monsterLinkEquipDefense){\r\n            //如果有装备，则装备也一起去掉\r\n            botCardList.value = botCardList.value.map(item1=>{\r\n              if(item1.name==item.monsterLinkEquipDefense.name){\r\n                item1 = {}\r\n              }\r\n              return item1\r\n            })\r\n          }\r\n         item = {} \r\n        }\r\n        return item\r\n      })//去掉被攻击的怪物\r\n    }else if(damage==0){\r\n      mesList.value.push(\"我方未能击穿对方防御\")\r\n      botLifeNum.value -= damage\r\n    }else if(damage<0){\r\n      mesList.value.push(\"我方收到了对方反击，受到了\"+(-1*damage)+\"点伤害\")\r\n      myLifeNum.value -= damage\r\n    }\r\n    isShowSureCancelBlock.value = false\r\n    monstersList.value = []\r\n    showDialogCardList.value = false\r\n    dialogLeft.value = 400\r\n    dialogWidth.value = 0\r\n  }else if(choiceType.value==\"defenseCard\"){\r\n\r\n    delectCardActive(activeCard.value,botCardList.value)\r\n    //清除卡片\r\n    let useCard = monstersList.value[choiceIndex.value]\r\n    mesList.value.push(\"我方选择\"+ useCard.name)\r\n    let backcards = []\r\n    if(useCard.name!=\"不响应\"){\r\n      myCardList.value.forEach(item=>{\r\n        if(useCard == item){\r\n          //找到那一张格挡\r\n          recycleList.value.push(item)\r\n          //加入弃牌堆\r\n          backcards.push({})\r\n        }else{\r\n          backcards.push(item)\r\n        }\r\n      })\r\n      myCardList.value = backcards\r\n      \r\n      //去掉用掉的格挡卡\r\n      mesList.value.push(\"我方进行了格挡\")\r\n    }else{\r\n      //如果选择不响应\r\n      myLifeNum.value-=2\r\n      mesList.value.push(\"我方未进行格挡，失去两点生命值\")\r\n      //失去两点生命值\r\n    }\r\n    nextTick(()=>{\r\n      \r\n      botUseCard()\r\n      // showDialogMes(\"对方发动了\"+activeCard.value.name,1500,()=>{botUseCard()})\r\n    })//继续对方出牌\r\n  }else if(choiceType.value==\"duel\"){\r\n    delectCardActive(activeCard.value,botCardList.value)\r\n    //清除卡片 决斗\r\n    let useCard = monstersList.value[choiceIndex.value]\r\n    mesList.value.push(\"对方发动决斗\")\r\n    isShowSureCancelBlock.value = false\r\n    //关掉确认和取消按钮\r\n    if(useCard.name!=\"不响应\"){\r\n      isShowSureCancelBlock.value = false\r\n      //去掉手牌中使用的 急袭\r\n      duelNum.value++\r\n      //增加本次决斗的伤害\r\n      myHandCardList.value = delOneCard(useCard.name,myHandCardList.value)\r\n      botCheckDuel()\r\n    }else{\r\n      //如果选择不响应\r\n      myLifeNum.value-=duelNum.value\r\n      mesList.value.push(\"我方未进行回击，失去\"+duelNum.value+\"点生命值\")\r\n      //失去两点生命值\r\n      nextTick(()=>{\r\n      botUseCard()\r\n    })//继续对方出牌\r\n    }\r\n  }else if(choiceType.value == \"keepDuel\"){\r\n    let useCard = monstersList.value[choiceIndex.value]\r\n    //得到我方对 回应决斗的 选择\r\n    // console.log(\"keepDuel\",useCard)\r\n    \r\n    if(useCard.name == \"急袭\"){\r\n      //继续回击\r\n      duelNum.value++\r\n      myHandCardList.value = delOneCard(useCard.name,myHandCardList.value)\r\n      //继续增加本次决斗的伤害\r\n      botCheckDuel()\r\n      \r\n    }else{\r\n      //放弃回击\r\n      myLifeNum.value-=duelNum.value\r\n      //结算本次决斗的伤害\r\n      isShowSureCancelBlock.value = false\r\n      if(whosTurn.value==\"bot\"){\r\n        botUseCard()\r\n      }\r\n      //继续对方出牌\r\n    }\r\n  }else if(choiceType.value == \"choiceMoreMonster\"){\r\n    //进行怪物召唤\r\n    let useCard = monstersList.value[choiceIndex.value]\r\n    //得到我方对 怪物的 选择\r\n    myLifeNum.value -=useCard.start\r\n    //支付对应生命值\r\n    choiceType.value = \"choiceMyMonsterArea\"\r\n    showDialogCardList.value = false\r\n    dialogWidth.value = 0\r\n    dialogLeft.value = 400\r\n    showMyMonsterArea()\r\n  }else if(choiceType.value == \"choiceMyMonsterArea\"){\r\n    if(myMonsterCardIndex.value==-1){\r\n      myMonsterAreaCan.value = [false,false,false,false,false]\r\n      //如果不选直接点确定 卡住\r\n      showTipsMes(\"请选择召唤位置\",()=>{})\r\n    }else{\r\n      mesList.value.push(\"我方召唤了\"+monstersList.value[choiceIndex.value].name)\r\n      isShowSureCancelBlock.value = false\r\n      myMonsterList.value[myMonsterCardIndex.value] = monstersList.value[choiceIndex.value]\r\n      myMonsterCardIndex.value = -1//重置选择我方怪兽位置\r\n      myMonsterAreaCan.value = [false,false,false,false,false]//重置可选怪兽区域（背景色)\r\n      choiceIndex.value = -1\r\n      //重置选中阴影\r\n    }\r\n  }\r\n}\r\nconst botCheckDuel = ()=>{\r\n  let list = []\r\n  botHandCardList.value.forEach(item=>{\r\n    if(item.name==\"急袭\"){\r\n      list.push(item)\r\n    }\r\n  })\r\n  console.log(list)\r\n  if(list.length>0){\r\n    //如果还有 急袭 可以反击\r\n    isShowSureCancelBlock.value = false\r\n    showDialogCardList.value  = false\r\n    dialogWidth.value = 0\r\n    dialogLeft.value = 400\r\n    //清除弹出框\r\n    duelNum.value++\r\n    //增加本次决斗的伤害\r\n    mesList.value.push(\"对方继续回应决斗\")\r\n    choiceType.value = \"keepDuel\"\r\n    //进入对拼循环\r\n    showDialogMes(\"对方继续回应决斗\",1000,()=>{\r\n    botHandCardList.value = delOneCard(\"急袭\",botHandCardList.value)\r\n    //去掉手卡中一张\r\n\r\n    monstersList.value = []\r\n    myHandCardList.value.forEach(item=>{\r\n      if(item.name==\"急袭\"){\r\n        monstersList.value.push(item)\r\n      }\r\n    })\r\n    monstersList.value.push({name:\"不响应\"})\r\n      dialogWidth.value = 200\r\n      dialogLeft.value = 200\r\n      isShowSureCancelBlock.value = true\r\n      showDialogCardList.value  = true\r\n      //重新展示\r\n    })\r\n    \r\n  }else{\r\n    //如果对方没有反击用的 急袭 了\r\n    showDialogMes(\"决斗成功\",1000,()=>{\r\n      mesList.value.push(\"对方没有可用的 急袭，结算决斗伤害\"+duelNum.value+\"点\")\r\n      botLifeNum.value-=duelNum.value\r\n      isShowSureCancelBlock.value = false\r\n      //关掉确认和取消按钮\r\n      if(whosTurn.value==\"bot\"){\r\n        botUseCard()\r\n        //继续对方出牌\r\n      }\r\n    })\r\n    \r\n  }\r\n}\r\nconst delOneCard = (name,list)=>{\r\n  let hasfind = false\r\n  let result = []\r\n  list.forEach(item=>{\r\n    if(item.name==name&&!hasfind){\r\n      //去掉\r\n      recycleList.value.push(item)\r\n      //加入弃牌堆\r\n      hasfind = true\r\n    }else{\r\n      result.push(item)\r\n    }\r\n  })\r\n  return result\r\n}\r\nconst duelNum = ref(-1)\r\nconst attackMyMonsterIndex = ref(-1)\r\nconst MyCarnArea = ()=>{\r\n  let resultList = []\r\n  if(myCardIndex.value!=-1){\r\n    for(let i = 0;i<myCardList.value.length;i++){\r\n      if(i ==  myCardIndex.value){\r\n        resultList.push(usingCard.value)\r\n      }else{\r\n        resultList.push(myCardList.value[i])\r\n      }\r\n    }\r\n  }else{\r\n    let hasinput = false\r\n    for(let i = 0;i<myCardList.value.length;i++){\r\n      if(myCardList.value[i]=={}&&!hasinput){\r\n        resultList.push(usingCard.value)\r\n        hasinput = true\r\n      }else{\r\n        resultList.push(myCardList.value[i])\r\n      }\r\n    }\r\n  }\r\n    \r\n    myCardList.value = resultList\r\n    //更新我方后场\r\n}\r\nconst cleanCard = (list,card)=>{\r\n  let resultList = []\r\n  let hasmove = false\r\n  list.forEach(item=>{\r\n    if(item.name==card.name&&!hasmove){\r\n      //跳过一张这个同名卡。从手卡中移出\r\n      hasmove = true\r\n    }else{\r\n      resultList.push(item)\r\n    }\r\n  })\r\n  return resultList\r\n}\r\nconst myMonsterAreaCan = ref([])\r\nconst showMyMonsterArea =()=>{\r\n  myMonsterAreaCan.value = []\r\n  let isOver = true\r\n  if(!myMonsterList.value[0]?.name){\r\n    myMonsterAreaCan.value.push(true)\r\n    isOver = false\r\n  }else{\r\n    myMonsterAreaCan.value.push(false)\r\n  }\r\n  if(!myMonsterList.value[1]?.name){\r\n    myMonsterAreaCan.value.push(true)\r\n    isOver = false\r\n  }else{\r\n    myMonsterAreaCan.value.push(false)\r\n  }\r\n  if(!myMonsterList.value[2]?.name){\r\n    myMonsterAreaCan.value.push(true)\r\n    isOver = false\r\n  }else{\r\n    myMonsterAreaCan.value.push(false)\r\n  }\r\n  if(!myMonsterList.value[3]?.name){\r\n    myMonsterAreaCan.value.push(true)\r\n    isOver = false\r\n  }else{\r\n    myMonsterAreaCan.value.push(false)\r\n  }\r\n  if(!myMonsterList.value[4]?.name){\r\n    myMonsterAreaCan.value.push(true)\r\n    isOver = false\r\n  }else{\r\n    myMonsterAreaCan.value.push(false)\r\n  }\r\n  if(isOver){\r\n    mesList.value.push(\"没有位置可以进行召唤！\")\r\n  }\r\n}\r\nconst getMyMonsterBackground = (index)=>{\r\n  let result = \"\"\r\n  if(myMonsterAreaCan.value[index]){\r\n    result+= \"background:#e9f8ff\"\r\n  }else{\r\n    result += \"\"\r\n  }\r\n  if(index == myMonsterCardIndex.value){\r\n    return \"background: rgb(189 234 255);\"\r\n  }\r\n  return result\r\n}\r\nconst getMyCardBackground = (index)=>{\r\n  let result = \"\"\r\n  if(myCardAreaCan.value[index]){\r\n    result+= \"background:#e9f8ff\"\r\n  }else{\r\n    result += \"\"\r\n  }\r\n  if(index == myCardIndex.value){\r\n    return \"background: rgb(189 234 255);\"\r\n  }\r\n  return result\r\n}\r\nconst myMonsterCardIndex = ref(-1)\r\nconst choiceMyMonsterCardIndex = (index)=>{\r\n  if(myMonsterCardIndex.value == index){\r\n    myMonsterCardIndex.value = -1\r\n  }else{\r\n    myMonsterCardIndex.value = index\r\n  }\r\n}\r\nconst choiceMyCardIndex = (index)=>{\r\n  if(myCardIndex.value == index){\r\n    myCardIndex.value = -1\r\n  }else{\r\n    myCardIndex.value = index\r\n  }\r\n}\r\nconst nowStep = ref(-1)\r\nconst enterFight = ()=>{\r\n  //进战阶\r\n  showDialogMes(\"战斗阶段\",1000,()=>{\r\n  nowStep.value = 1\r\n  mesList.value.push(\"我方进入战斗阶段\")\r\n  if(monsterCallNum.value==1){\r\n    mesList.value.push(\"第一回合不能攻击，自动结束战斗阶段\")\r\n    showDialogMes(\"首回合不能攻击，结束战斗阶段\",1500,()=>{endMyTurn()})\r\n  }else{\r\n    //我方进行进攻\r\n  }\r\n\r\n  })\r\n}\r\nconst enterMainTwo = ()=>{\r\n  //进主2\r\n  showDialogMes(\"主要阶段2\",1000,()=>{\r\n  nowStep.value = 2\r\n  mesList.value.push(\"我方进入主要阶段2\")\r\n  })\r\n}\r\nconst endMyTurn = ()=>{\r\n  //结束阶段\r\n  showDialogMes(\"结束阶段\",1000,()=>{\r\n  nowStep.value = -1\r\n  mesList.value.push(\"我方结束阶段\")\r\n  myMonsterList.value = myMonsterList.value.map(item=>{\r\n\r\n    if(item.name==monsterNameList.value[1].name){\r\n\r\n      item.attack++\r\n      mesList.value.push(item.name+\"发动了能力，攻击力上升了一点\")\r\n      console.log(item)\r\n    }//处理吸血鬼回合结束加攻击\r\n\r\n    if(item.name==monsterNameList.value[2].name){\r\n      if(item?.monsterLinkEquipAttack){\r\n        myCardList.value = myCardList.value.map(item1=>{\r\n          if(item1.name==item.monsterLinkEquipAttack.name){\r\n            item1 = {}\r\n          }\r\n          return item1\r\n        })\r\n      }\r\n      if(item?.monsterLinkEquipDefense){\r\n        myCardList.value = myCardList.value.map(item1=>{\r\n          if(item1.name==item.monsterLinkEquipDefense.name){\r\n            item1 = {}\r\n          }\r\n          return item1\r\n        })\r\n      }\r\n      item = {}\r\n    }\r\n    //处理回合结束自动破坏\r\n    return item\r\n  })\r\n  myEndTurn()\r\n  })\r\n}\r\nconst myEndTurn= ()=>{\r\n  mesList.value.push(\"我方进入弃牌阶段\")\r\n  showDialogMes(\"我方进入弃牌阶段\",1500,()=>{myHandCardList.value = endTurnLostCard(myHandCardList.value,\"我方\");botTurn() })\r\n}\r\nconst getAttackStyle=(index,item) =>{\r\n  let killNum = 0\r\n  myHandCardList.value.forEach(item=>{\r\n    if(item.name==\"急袭\"){\r\n      killNum++\r\n    }\r\n  })\r\n  if(nowStep.value==1&&index == myMonsterCardIndex.value&&item?.name&&killNum>0){\r\n    return true\r\n  }else{\r\n    return false\r\n  }\r\n  \r\n}\r\nconst attack = (item,index)=>{\r\n  let list = []\r\n  botMonsterList.value.forEach((item1)=>{\r\n    if(item1?.name){\r\n      list.push(item1)\r\n    }\r\n  })\r\n  if(list.length==0){\r\n    list.push({name:\"直接攻击\"})\r\n  }\r\n  monstersList.value = list\r\n  choiceType.value = \"attack\"\r\n  dialogLeft.value = 200\r\n  dialogWidth.value = 200\r\n  showDialogCardList.value = true\r\n  isShowSureCancelBlock.value = true\r\n  attackMyMonsterIndex.value = index\r\n}\r\nconst choiceMoreMonster = ()=>{\r\n  if(!showDialogCardList.value){\r\n    choiceType.value = \"choiceMoreMonster\"\r\n    dialogWidth.value = 200\r\n    dialogLeft.value = 200\r\n    monstersList.value = monstersListOnlyRead.value\r\n    showDialogCardList.value = true\r\n  }else{\r\n    dialogWidth.value = 0\r\n    dialogLeft.value = 400\r\n    monstersList.value = []\r\n    showDialogCardList.value = false\r\n  }\r\n}\r\n\r\n//it is obviously that attack card less than defend/heal card\r\n//so i think control the monsters attribute is a good chioce to balance it \r\n//monster attack need not any card \r\n\r\n</script>\r\n<template>\r\n    <div class=\"background\">\r\n      <div class=\"more-button\" @click=\"showLeftTopButtons\">三</div>\r\n      <div class=\"bot-life-block\">\r\n        <div class=\"bot-head-block\"></div>\r\n        <div class=\"bot-life\" :style=\"getBotLive()\"></div>\r\n        <div class=\"bot-life-corner\"></div>\r\n        <div class=\"bot-hand-card-block\">\r\n          <div class=\"bot-hand-card\" v-for=\"(item,index) in botHandCardList\" :key=\"index\" :style=\"getBotHandCardStyle()\" @click=\"showCardDetail(item)\">\r\n            <div class=\"bot-hand-card-text\" v-for=\"(item1,index) in item.name\" :key=\"index\">{{item1}}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"body-block\">\r\n          <div class=\"dialog-block\" :style=\"dialogStyle()\">\r\n            <div v-if=\"showDialog\" class=\"dialog-text\">{{dialogText}}</div>\r\n            <div v-for=\"(item,index) in monstersList\" :key=\"index\" v-show=\"showDialogCardList\" class=\"dialog-cards-block\" :style=\"isChoiceCard(index)\"  @click=\"showCardDetail(item);showSureAndCancel();choiceCardIndex(index)\">\r\n                <div v-for=\"(item,index) in item.name\" :key=\"index\">{{item}}</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"meslist-block\">\r\n            <div v-for=\"(item,index) in mesList\" :key=\"index\" class=\"meslist-text\">{{item}}</div>\r\n          </div>\r\n          <div class=\"card-block\">\r\n            <div class=\"bot-card-block\">\r\n              <div class=\"bot-monster-block\" v-for=\"(item,index) in botCardList\" :key=\"index\" @click=\"(item.mode=='equip'||item.mode=='active')?showCardDetail(item):{} \">\r\n                <div v-if=\"item.mode=='equip'||item.mode=='active'\">{{item.name}}</div>\r\n                <div v-if=\"item.mode=='back'\">盖卡</div>\r\n              </div>\r\n              <div class=\"bot-monster-block\" v-for=\"(item,index) in botMonsterList\" :key=\"index\" @click=\"showCardDetail(item)\">{{item.name}}</div>\r\n            </div>\r\n            <div class=\"my-card-block\">\r\n              <div class=\"bot-monster-block\" v-for=\"(item,index) in myMonsterList\" :key=\"index\" :style=\"getMyMonsterBackground(index)\" @click=\"showCardDetail(item);choiceMyMonsterCardIndex(index)\">\r\n                {{item.name}}\r\n                <div v-show=\"getAttackStyle(index,item)\" class=\"attack-button\" @click=\"attack(item,index)\">攻击</div>\r\n              </div>\r\n              <div class=\"bot-monster-block\" v-for=\"(item,index) in myCardList\" :key=\"index\" :style=\"getMyCardBackground(index)\" @click=\"showCardDetail(item);choiceMyCardIndex(index)\">{{item.name}}\r\n                <div v-show=\"item?.cover\" class=\"card-cover\">c</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"detail-block\">\r\n            <div class=\"detail-title\">{{getMonsterName(detailMes.name)}}</div>\r\n            <div v-if=\"detailMes.cost\" class=\"detail-cost\">💀{{detailMes.cost}}</div>\r\n            <div class=\"detail-type\">{{getTypeText(detailMes.type)}}</div>\r\n            <div v-if=\"detailMes.start\" class=\"detail-start-block\">\r\n              <div v-if=\"detailMes.start\" class=\"detail-start\">{{getStartNum(detailMes.start)}}</div>\r\n            </div>\r\n            <div v-if=\"detailMes.equipLinkMonster\" class=\"detail-link\" >B:{{detailMes.equipLinkMonster.name}}</div>\r\n            <div v-if=\"detailMes.monsterLinkEquipAttack\" class=\"detail-link\" >B:{{detailMes.monsterLinkEquipAttack.name}}</div>\r\n            <div v-if=\"detailMes.monsterLinkEquipDefense\" class=\"detail-link1\" >B:{{detailMes.monsterLinkEquipDefense.name}}</div>\r\n            <div v-if=\"detailMes.attack\" class=\"detail-attack\">A: {{detailMes.attack}}</div>\r\n            <div v-if=\"detailMes.defense\" class=\"detail-defense\">D: {{detailMes.defense}}</div>\r\n            <div v-if=\"detailMes.type=='monster'\" class=\"detail-num\">N: {{detailMes.num}}</div>\r\n            <div class=\"detail-text\">{{detailMes.desc}}</div>\r\n          </div>\r\n          <div v-show=\"isShowSureCancelBlock\" class=\"sure-cancel-block\">\r\n            <div  class=\"sure-block\" @click=\"makeSure\">确认</div>\r\n            <div  class=\"cancel-block\" @click=\"isShowSureCancelBlock = false;choiceIndex=-1\">取消</div>\r\n          </div>\r\n      </div>\r\n      <div class=\"my-block\">\r\n        <div class=\"tips\" :style=\"getTipsStyle()\">{{tipsValue}}</div>\r\n        <div class=\"my-head-block\">\r\n          \r\n        </div>\r\n        <div class=\"my-hand-card-block\">\r\n          <div class=\"my-hand-card\" v-for=\"(item,index) in myHandCardList\" :key=\"index\" :style=\"getMyHandCardStyle()\" @click=\"showCardDetail(item);myUseCards(item,index)\">\r\n            <div class=\"my-hand-card-text\" v-for=\"(item1,index1) in item.name\" :key=\"index1\">{{item1}}\r\n            <div class=\"my-hand-card-buttons-block\" v-show=\"showMyHandCardButton&&index==myUseCardIndex\">\r\n                <div class=\"my-hand-card-buttons\" v-for=\"(item2,index2) in myHandCardUsedList\" :key=\"index2\" @click=\"useMyHandCards(item2,item)\">\r\n                  {{item2}}\r\n                </div>\r\n            </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"my-life\" :style=\"getMyLive()\"></div>\r\n        <div class=\"my-function\">\r\n          <div class=\"ex-cardlist-block\" @click=\"choiceMoreMonster\">EX</div>\r\n          <div v-show=\"nowStep==0\" @click=\"enterFight\" class=\"ex-cardlist-block\">战阶</div>\r\n          <div v-show=\"nowStep==1\" @click=\"enterMainTwo\" class=\"ex-cardlist-block\">主2</div>\r\n          <div v-show=\"nowStep==0||nowStep==1||nowStep==2\" @click=\"endMyTurn\" class=\"ex-cardlist-block\">结束</div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"left-top-block\" @mouseleave=\"closeLeftTopButtons\" :style=\"getDeg()\">\r\n        <div v-show=\"top==0\" class=\"begin-button\" > 开始</div>\r\n        <div v-show=\"top==0\" class=\"restart-button\" @click=\"reStartGame\"> 重开</div>\r\n      </div>\r\n      <button class=\"test-button\" @click=\"changeTest()\">123</button>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.background{\r\n  padding: 0;\r\n  margin: 0;\r\n  width: 600px;\r\n  height: 400px;\r\n  position: relative;\r\n  /* background: #eee; */\r\n      border: 1px #ddd solid;\r\n  opacity: 0.5;\r\n}\r\n.more-button{\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 30px;\r\n  height: 30px;\r\n  text-align: center;\r\n  line-height: 30px;\r\n}\r\n.more-button:hover{\r\n  cursor: pointer;\r\n}\r\n.bot-life-block{\r\n  width: 84%;\r\n  height: 80px;\r\n  margin-left: 16%;\r\n  /* background: #888; */\r\n  position: relative;\r\n}\r\n.bot-life-corner{\r\n  width: 20px;\r\n  height: 50px;\r\n  float: left;\r\n  background: #ffeada;\r\n}\r\n.bot-hand-card-block{\r\n  position: absolute;\r\n  top: 4px;\r\n  left: 20px;\r\n  width: 384px;\r\n  height: 56px;\r\n  background: #f6f6f6;\r\n  padding: 10px;\r\n}\r\n.bot-hand-card{\r\n  text-align: center;\r\n  height: 60px;\r\n  width: 50px;\r\n  border: 1px #444 solid;\r\n  float: left;\r\n  margin-right: 2px;\r\n  font-size: 11.5px;\r\n}\r\n.bot-life{\r\n  width: 404px;\r\n  height: 5px;\r\n  background: #f1dddd;\r\n  float: right;\r\n  border-bottom-left-radius: 2px;\r\n  transition: 0.5s;\r\n}\r\n.bot-head-block{\r\n  width: 80px;\r\n  height: 80px;\r\n  float: right;\r\n  background: #eee;\r\n  border-bottom-left-radius: 5px;\r\n}\r\n.left-top-block{\r\n  position: absolute;\r\n  top: -100px;\r\n  left: 0;\r\n  width: 100px;\r\n  height: 100px;\r\n  background: #eee;\r\n  border-bottom-right-radius: 100%;\r\n  overflow: hidden;\r\n  /* transform:rotate(-90deg); */\r\n  transition: 0.3s;\r\n}\r\n.begin-button{\r\n  font-size: 18px;\r\n  height: 30px;\r\n  line-height: 30px;\r\n  padding-left: 18px;\r\n  margin-top: 5px;\r\n  color: #444;\r\n}\r\n.begin-button:hover{\r\n  background: #f8f8f8;\r\n  cursor: pointer;\r\n}\r\n.restart-button{\r\n  font-size: 18px;\r\n  height: 30px;\r\n  line-height: 30px;\r\n  margin-top: 5px;\r\n  color: #888;\r\n  padding-left: 18px;\r\n}\r\n.restart-button:hover{\r\n  background: #f8f8f8;\r\n  color: #444;\r\n  cursor: pointer;\r\n}\r\n.test-button{\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n}\r\n.body-block{\r\n  width: 100%;\r\n  height: 200px;\r\n  position: relative;\r\n}\r\n.dialog-block{\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  white-space:nowrap;\r\n  position: absolute;\r\n  top: 60px;\r\n  left: 200px;\r\n  height: 80px;\r\n  /* width: 200px; */\r\n  background: #fff;\r\n  border-top: 1px red solid;\r\n  border-bottom: 1px red solid;\r\n  transition: 0.2s;\r\n  z-index: 9;\r\n}\r\n.dialog-text{\r\n  height: 80px;\r\n  line-height: 80px;\r\n  text-align: center;\r\n  font-size: 18px;\r\n  color: #b97a7a;\r\n}\r\n.dialog-cards-block{\r\n  overflow: hidden;\r\n  text-align: center;\r\n  width: 50px;\r\n  height: 60px;\r\n  border: 1px #888 solid;\r\n  border-radius: 5px;\r\n  font-size: 12px;\r\n  margin: 5px;\r\n  float: left;\r\n  /* background: #888; */\r\n}\r\n.meslist-block{\r\n  width: 160px;\r\n  padding: 10px;\r\n  height: 180px;\r\n  background: #f7f7f7;\r\n  float: left;\r\n  display: block;\r\n  overflow: auto;\r\n}\r\n.meslist-text{\r\n  font-size: 12px;\r\n}\r\n.card-block{\r\n  width: 40%;\r\n  height: 100%;\r\n  float: left;\r\n}\r\n.bot-card-block{\r\n  width: 100%;\r\n  height: 50%;\r\n  /* border-bottom: 1px #ccc solid; */\r\n}\r\n.bot-monster-block{\r\n  position: relative;\r\n  width: 40px;\r\n  height: 48px;\r\n  margin-left: 6px;\r\n  float: left;\r\n  border: 1px #888 solid;\r\n  /* margin-top: 1px; */\r\n  color: #5a5050;\r\n  font-size: 10px;\r\n  text-align: center;\r\n  /* overflow: hidden; */\r\n  text-overflow: ellipsis;\r\n}\r\n.card-cover{\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 20px;\r\n  transform: translateX(-50%);\r\n}\r\n.attack-button{\r\n  position: absolute;\r\n  top: -20px;\r\n  left: 0;\r\n  width: 40px;\r\n  background: #fff;\r\n  border: 1px #444 solid;\r\n  font-size: 14px;\r\n  z-index: 3;\r\n}\r\n.attack-button:hover{\r\n  cursor: pointer;\r\n  background: #b3aeae;\r\n  color: #fff;\r\n}\r\n.my-card-block{\r\n  width: 100%;\r\n  height: 50%;\r\n}\r\n.detail-block{\r\n  width: 160px;\r\n  height: 180px;\r\n  float: left;\r\n  background: #e4e4e4;\r\n  padding: 10px;\r\n  position: relative;\r\n}\r\n.detail-title{\r\n  color: #b29e9e;\r\n  font-weight: bold;\r\n}\r\n.detail-cost{\r\n  color: #741313;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 50px;\r\n  font-size: 12px;\r\n}\r\n.detail-type{\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10px;\r\n  font-size: 12px;\r\n  color: #588693;\r\n}\r\n.detail-text{\r\n  margin-top: 10px;\r\n  font-size: 14px;\r\n}\r\n.sure-cancel-block{\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 30px;\r\n}\r\n.sure-block{\r\n  margin-left: 120px;\r\n  height: 30px;\r\n  width: 50px;\r\n  line-height: 30px;\r\n  text-align: center;\r\n  color: #2991d8;\r\n  float: left;\r\n  cursor: pointer;\r\n}\r\n.cancel-block{\r\n  cursor: pointer;\r\n  float:right;\r\n  height: 30px;\r\n  width: 50px;\r\n  line-height: 30px;\r\n  text-align: center;\r\n  color: #e75757;\r\n  margin-right: 130px;\r\n}\r\n.detail-start-block{\r\n  width: 100%;\r\n  height: 16px;\r\n  position: relative;\r\n  margin-top: 5px;\r\n  top: 0;\r\n  right: 0;\r\n}\r\n.detail-start{\r\n  float: left;\r\n  padding: 0 1px;\r\n  font-size: 16px;\r\n  color: #800f0f;\r\n}\r\n.detail-link{\r\n  position: absolute;\r\n  bottom: 10px;\r\n  left: 10px;\r\n  font-size: 14px;\r\n  color: #4c7e8a;\r\n}\r\n.detail-link1{\r\n  position: absolute;\r\n  bottom: 30px;\r\n  left: 10px;\r\n  font-size: 14px;\r\n  color: #4c7e8a;\r\n}\r\n.detail-attack{\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 50px;\r\n  font-size: 14px;\r\n  color: #e86565;\r\n}\r\n.detail-defense{\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 10px;\r\n  font-size: 14px;\r\n  color: #6597e8;\r\n}\r\n.detail-num{\r\n  position: absolute;\r\n  bottom: 30px;\r\n  right: 10px;\r\n  font-size: 14px;\r\n  color: #6597e8;\r\n}\r\n.my-block{\r\n  width: 100%;\r\n  height: 120px;\r\n  position: relative;\r\n}\r\n.tips{\r\n  position: absolute;\r\n  text-align: center;\r\n  top: 5px;\r\n  left: 120px;\r\n  width: 400px;\r\n  height: 15px;\r\n  font-size: 12px;\r\n  color: rgb(228, 152, 152);\r\n  transition: 0.3s;\r\n}\r\n.my-head-block{\r\n  height: 120px;\r\n  width: 120px;\r\n  float: left;\r\n  background: #eee;\r\n}\r\n.my-hand-card-block{\r\n  width: 380px;\r\n  height: 80px;\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 120px;\r\n  background: #f2fbfd;\r\n  padding: 10px;\r\n}\r\n.my-hand-card{\r\n  position: relative;\r\n  text-align: center;\r\n  width: 60px;\r\n  height: 80px;\r\n  border: 1px #444 solid;\r\n  float: left;\r\n  margin-right: 2px;\r\n  font-size: 15px;\r\n}\r\n.my-hand-card-text{\r\n  color: #ab8c8c;\r\n}\r\n.my-hand-card-buttons-block{\r\n  position: absolute;\r\n  top: -60px;\r\n  left: 0;\r\n  width: 50px;\r\n  height: 40px;\r\n  background: #fff;\r\n}\r\n.my-hand-card-buttons{\r\n  text-align: center;\r\n  width: 100%;\r\n  height: 20px;\r\n  cursor: pointer;\r\n}\r\n.my-hand-card-buttons:hover{\r\n  color: #FFF;\r\n  background: #6e6e6e;\r\n}\r\n.my-life{\r\n  width: 400px;\r\n  height: 5px;\r\n  background: #f1dddd;\r\n  float: left;\r\n  border-top-right-radius: 2px;\r\n  transition: 0.5s;\r\n}\r\n.my-function{\r\n  width: 80px;\r\n  height: 120px;\r\n  float: right;\r\n  background: #f7f9f9;\r\n}\r\n.ex-cardlist-block{\r\n  font-size: 14px;\r\n  text-align: center;\r\n  height: 30px;\r\n  width: 100%;\r\n  line-height: 30px;\r\n  color: #888;\r\n  cursor: pointer;\r\n}\r\n.ex-cardlist-block:hover{\r\n  color: #444;\r\n  background: #fcf5f5;\r\n}\r\n</style>","import script from \"./MonsterTest.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MonsterTest.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MonsterTest.vue?vue&type=style&index=0&id=772c4af3&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/.pnpm/vue-loader@17.4.2_vue@3.4.27_webpack@5.92.0/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-772c4af3\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=c29f9cba\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=c29f9cba&lang=css\"\n\nimport exportComponent from \"../node_modules/.pnpm/vue-loader@17.4.2_vue@3.4.27_webpack@5.92.0/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {createStore} from \"vuex\";\r\nconst $store = createStore({\r\n   //state可以看作是全局公共的数据，需要的组件可以调用\r\n    state: {\r\n        count: 0,\r\n        usingList: [],\r\n        botUsingList:[],\r\n        myList:[],\r\n        botLiveNumNow:20,\r\n        myLiveNumNow:20,\r\n        IisEnd:true,\r\n        BotisEnd:true,\r\n    },\r\n    getters: {},\r\n    //mutations可以看作是调用state的事件，在组件中可以通过commit方法调用和响应\r\n    mutations: {\r\n        increment(state, payload) {\r\n            state.count = state.count + 1\r\n            console.log('payload:' + payload)\r\n        },\r\n        changeUsingList(state,list){\r\n            state.usingList = list\r\n        },\r\n        changeBotUsingList(state,list){\r\n            state.botUsingList = list\r\n        },\r\n        setBotLive(state,num){\r\n            state.botLiveNumNow = num\r\n        },\r\n        setMyLive(state,num){\r\n            state.myLiveNumNow = num\r\n        },\r\n        IshouldEnd(state,is){\r\n            state.IisEnd = is\r\n        },\r\n        BotshouldEnd(state,is){\r\n            state.BotisEnd = is\r\n        },\r\n        setMyList(state,list){\r\n            state.myList = list\r\n        }\r\n    },\r\n    actions: {},\r\n    modules: {}\r\n})\r\n\r\nexport default $store;","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from '@/store';\n\nconst app = createApp(App)\napp.use(store);\napp.mount('#app')\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkvue3test\"] = self[\"webpackChunkvue3test\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(6707); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_MonsterTest","cardsList","ref","cardType","num","name","type","desc","botCardList","cardsListNow","usedCardsList","mesList","monsterCallNum","whosTurn","outOfOrder","list","len","length","i","index","parseInt","Math","random","temp","usedCardsNum","monsterNameList","id","monstersListOnlyRead","value","start","cost","attack","defense","monstersList","resetAll","nextTick","deg","top","botHandCardList","myHandCardList","myMonsterList","botMonsterList","myCardList","botLifeNum","myLifeNum","showDialogMes","title","time","then","showDialogCardList","dialogWidth","dialogLeft","showDialog","dialogText","setTimeout","reStartGame","getCardFormList","push","botChoiceMonster","myChoiceMonster","choiceType","monsterName","monster","forEach","item","setBotMonster","checkCard","cardList","nokillList","killNum","console","log","result","map","addBotCardToArea","card","mode","botFight","botEndTurn","attackMonsterList","getMaxtList","defenseMyMonsterList","myDefenseMonsterList","Array","isArray","delOneCard","item1","handCards","randomNum","ceil","item3","index3","item2","monsterLinkEquipAttack","monsterLinkEquipDefense","resultList","ability","max","resList","isFirst","endTurnLostCard","myTrun","botHasMonster","botUseCard","canGo","botHandResult","checkEquip","useActive","hasInput","equipLinkMonster","newCardList","cancel","recycleList","delectCardActive","usedManList","usedList","activeCard","duelNum","botTurn","hasMonster","myCardAreaCan","myCardIndex","showMyCardArea","isOver","isMyturn","showMyHandCardButton","myHandCardUsedList","myUseCardIndex","myUseCards","haveMonster","usingCard","tipsValue","getTipsStyle","showTipsMes","canUseCard","useMyHandCards","isShowSureCancelBlock","monsterList","isMonsterEquip","myActiveCard","hasdel","cleanCard","botCheckDuel","nowStep","listNow","who","changeTest","testList","getDeg","leftToplock","showLeftTopButtons","closeLeftTopButtons","getBotLive","css","getMyLive","watch","newVal","oldVal","detailMes","showCardDetail","getTypeText","getMyHandCardStyle","border","width","getBotHandCardStyle","dialogStyle","getMonsterName","split","getStartNum","showSureAndCancel","choiceIndex","choiceCardIndex","isChoiceCard","makeSure","showMyMonsterArea","myMonsterCardIndex","myMonsterAreaCan","cover","MyCarnArea","index1","handList","attackMyMonsterIndex","damage","useCard","backcards","hasfind","hasinput","hasmove","getMyMonsterBackground","getMyCardBackground","choiceMyMonsterCardIndex","choiceMyCardIndex","enterFight","endMyTurn","enterMainTwo","myEndTurn","getAttackStyle","choiceMoreMonster","__exports__","components","MonsterTest","render","$store","createStore","state","count","usingList","botUsingList","myList","botLiveNumNow","myLiveNumNow","IisEnd","BotisEnd","getters","mutations","increment","payload","changeUsingList","changeBotUsingList","setBotLive","setMyLive","IshouldEnd","is","BotshouldEnd","setMyList","actions","modules","app","createApp","App","use","store","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}